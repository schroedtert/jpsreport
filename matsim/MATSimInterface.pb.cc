// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MATSimInterface.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MATSimInterface.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MATSim2ExternPutAgent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MATSim2ExternPutAgent_reflection_ = NULL;
const ::google::protobuf::Descriptor* MATSim2ExternPutAgent_Agent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MATSim2ExternPutAgent_Agent_reflection_ = NULL;
const ::google::protobuf::Descriptor* MATSim2ExternHasSpace_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MATSim2ExternHasSpace_reflection_ = NULL;
const ::google::protobuf::Descriptor* MATSim2ExternHasSpaceConfirmed_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MATSim2ExternHasSpaceConfirmed_reflection_ = NULL;
const ::google::protobuf::Descriptor* MATSim2ExternPutAgentConfirmed_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MATSim2ExternPutAgentConfirmed_reflection_ = NULL;
const ::google::protobuf::Descriptor* Extern2MATSim_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Extern2MATSim_reflection_ = NULL;
const ::google::protobuf::Descriptor* Extern2MATSim_Agent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Extern2MATSim_Agent_reflection_ = NULL;
const ::google::protobuf::Descriptor* Extern2MATSimConfirmed_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Extern2MATSimConfirmed_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExternSimStepFinished_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExternSimStepFinished_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExternSimStepFinishedReceived_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExternSimStepFinishedReceived_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExternDoSimStep_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExternDoSimStep_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExternDoSimStepReceived_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExternDoSimStepReceived_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExternalConnect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExternalConnect_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExternalConnectConfirmed_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExternalConnectConfirmed_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExternOnPrepareSim_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExternOnPrepareSim_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExternOnPrepareSimConfirmed_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExternOnPrepareSimConfirmed_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExternAfterSim_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExternAfterSim_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExternAfterSimConfirmed_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExternAfterSimConfirmed_reflection_ = NULL;
const ::google::protobuf::Descriptor* AgentsStuck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AgentsStuck_reflection_ = NULL;
const ::google::protobuf::Descriptor* AgentsStuckConfirmed_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AgentsStuckConfirmed_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MATSimInterface_2eproto() {
  protobuf_AddDesc_MATSimInterface_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MATSimInterface.proto");
  GOOGLE_CHECK(file != NULL);
  MATSim2ExternPutAgent_descriptor_ = file->message_type(0);
  static const int MATSim2ExternPutAgent_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MATSim2ExternPutAgent, agent_),
  };
  MATSim2ExternPutAgent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MATSim2ExternPutAgent_descriptor_,
      MATSim2ExternPutAgent::default_instance_,
      MATSim2ExternPutAgent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MATSim2ExternPutAgent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MATSim2ExternPutAgent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MATSim2ExternPutAgent));
  MATSim2ExternPutAgent_Agent_descriptor_ = MATSim2ExternPutAgent_descriptor_->nested_type(0);
  static const int MATSim2ExternPutAgent_Agent_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MATSim2ExternPutAgent_Agent, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MATSim2ExternPutAgent_Agent, enternode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MATSim2ExternPutAgent_Agent, nodes_),
  };
  MATSim2ExternPutAgent_Agent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MATSim2ExternPutAgent_Agent_descriptor_,
      MATSim2ExternPutAgent_Agent::default_instance_,
      MATSim2ExternPutAgent_Agent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MATSim2ExternPutAgent_Agent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MATSim2ExternPutAgent_Agent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MATSim2ExternPutAgent_Agent));
  MATSim2ExternHasSpace_descriptor_ = file->message_type(1);
  static const int MATSim2ExternHasSpace_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MATSim2ExternHasSpace, nodeid_),
  };
  MATSim2ExternHasSpace_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MATSim2ExternHasSpace_descriptor_,
      MATSim2ExternHasSpace::default_instance_,
      MATSim2ExternHasSpace_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MATSim2ExternHasSpace, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MATSim2ExternHasSpace, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MATSim2ExternHasSpace));
  MATSim2ExternHasSpaceConfirmed_descriptor_ = file->message_type(2);
  static const int MATSim2ExternHasSpaceConfirmed_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MATSim2ExternHasSpaceConfirmed, hasspace_),
  };
  MATSim2ExternHasSpaceConfirmed_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MATSim2ExternHasSpaceConfirmed_descriptor_,
      MATSim2ExternHasSpaceConfirmed::default_instance_,
      MATSim2ExternHasSpaceConfirmed_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MATSim2ExternHasSpaceConfirmed, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MATSim2ExternHasSpaceConfirmed, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MATSim2ExternHasSpaceConfirmed));
  MATSim2ExternPutAgentConfirmed_descriptor_ = file->message_type(3);
  static const int MATSim2ExternPutAgentConfirmed_offsets_[1] = {
  };
  MATSim2ExternPutAgentConfirmed_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MATSim2ExternPutAgentConfirmed_descriptor_,
      MATSim2ExternPutAgentConfirmed::default_instance_,
      MATSim2ExternPutAgentConfirmed_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MATSim2ExternPutAgentConfirmed, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MATSim2ExternPutAgentConfirmed, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MATSim2ExternPutAgentConfirmed));
  Extern2MATSim_descriptor_ = file->message_type(4);
  static const int Extern2MATSim_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Extern2MATSim, agent_),
  };
  Extern2MATSim_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Extern2MATSim_descriptor_,
      Extern2MATSim::default_instance_,
      Extern2MATSim_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Extern2MATSim, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Extern2MATSim, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Extern2MATSim));
  Extern2MATSim_Agent_descriptor_ = Extern2MATSim_descriptor_->nested_type(0);
  static const int Extern2MATSim_Agent_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Extern2MATSim_Agent, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Extern2MATSim_Agent, leavenode_),
  };
  Extern2MATSim_Agent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Extern2MATSim_Agent_descriptor_,
      Extern2MATSim_Agent::default_instance_,
      Extern2MATSim_Agent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Extern2MATSim_Agent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Extern2MATSim_Agent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Extern2MATSim_Agent));
  Extern2MATSimConfirmed_descriptor_ = file->message_type(5);
  static const int Extern2MATSimConfirmed_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Extern2MATSimConfirmed, accepted_),
  };
  Extern2MATSimConfirmed_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Extern2MATSimConfirmed_descriptor_,
      Extern2MATSimConfirmed::default_instance_,
      Extern2MATSimConfirmed_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Extern2MATSimConfirmed, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Extern2MATSimConfirmed, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Extern2MATSimConfirmed));
  ExternSimStepFinished_descriptor_ = file->message_type(6);
  static const int ExternSimStepFinished_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternSimStepFinished, time_),
  };
  ExternSimStepFinished_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExternSimStepFinished_descriptor_,
      ExternSimStepFinished::default_instance_,
      ExternSimStepFinished_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternSimStepFinished, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternSimStepFinished, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExternSimStepFinished));
  ExternSimStepFinishedReceived_descriptor_ = file->message_type(7);
  static const int ExternSimStepFinishedReceived_offsets_[1] = {
  };
  ExternSimStepFinishedReceived_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExternSimStepFinishedReceived_descriptor_,
      ExternSimStepFinishedReceived::default_instance_,
      ExternSimStepFinishedReceived_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternSimStepFinishedReceived, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternSimStepFinishedReceived, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExternSimStepFinishedReceived));
  ExternDoSimStep_descriptor_ = file->message_type(8);
  static const int ExternDoSimStep_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternDoSimStep, fromtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternDoSimStep, totime_),
  };
  ExternDoSimStep_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExternDoSimStep_descriptor_,
      ExternDoSimStep::default_instance_,
      ExternDoSimStep_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternDoSimStep, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternDoSimStep, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExternDoSimStep));
  ExternDoSimStepReceived_descriptor_ = file->message_type(9);
  static const int ExternDoSimStepReceived_offsets_[1] = {
  };
  ExternDoSimStepReceived_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExternDoSimStepReceived_descriptor_,
      ExternDoSimStepReceived::default_instance_,
      ExternDoSimStepReceived_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternDoSimStepReceived, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternDoSimStepReceived, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExternDoSimStepReceived));
  ExternalConnect_descriptor_ = file->message_type(10);
  static const int ExternalConnect_offsets_[1] = {
  };
  ExternalConnect_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExternalConnect_descriptor_,
      ExternalConnect::default_instance_,
      ExternalConnect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalConnect, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalConnect, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExternalConnect));
  ExternalConnectConfirmed_descriptor_ = file->message_type(11);
  static const int ExternalConnectConfirmed_offsets_[1] = {
  };
  ExternalConnectConfirmed_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExternalConnectConfirmed_descriptor_,
      ExternalConnectConfirmed::default_instance_,
      ExternalConnectConfirmed_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalConnectConfirmed, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalConnectConfirmed, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExternalConnectConfirmed));
  ExternOnPrepareSim_descriptor_ = file->message_type(12);
  static const int ExternOnPrepareSim_offsets_[1] = {
  };
  ExternOnPrepareSim_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExternOnPrepareSim_descriptor_,
      ExternOnPrepareSim::default_instance_,
      ExternOnPrepareSim_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternOnPrepareSim, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternOnPrepareSim, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExternOnPrepareSim));
  ExternOnPrepareSimConfirmed_descriptor_ = file->message_type(13);
  static const int ExternOnPrepareSimConfirmed_offsets_[1] = {
  };
  ExternOnPrepareSimConfirmed_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExternOnPrepareSimConfirmed_descriptor_,
      ExternOnPrepareSimConfirmed::default_instance_,
      ExternOnPrepareSimConfirmed_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternOnPrepareSimConfirmed, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternOnPrepareSimConfirmed, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExternOnPrepareSimConfirmed));
  ExternAfterSim_descriptor_ = file->message_type(14);
  static const int ExternAfterSim_offsets_[1] = {
  };
  ExternAfterSim_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExternAfterSim_descriptor_,
      ExternAfterSim::default_instance_,
      ExternAfterSim_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternAfterSim, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternAfterSim, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExternAfterSim));
  ExternAfterSimConfirmed_descriptor_ = file->message_type(15);
  static const int ExternAfterSimConfirmed_offsets_[1] = {
  };
  ExternAfterSimConfirmed_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExternAfterSimConfirmed_descriptor_,
      ExternAfterSimConfirmed::default_instance_,
      ExternAfterSimConfirmed_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternAfterSimConfirmed, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternAfterSimConfirmed, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExternAfterSimConfirmed));
  AgentsStuck_descriptor_ = file->message_type(16);
  static const int AgentsStuck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentsStuck, agentid_),
  };
  AgentsStuck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AgentsStuck_descriptor_,
      AgentsStuck::default_instance_,
      AgentsStuck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentsStuck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentsStuck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AgentsStuck));
  AgentsStuckConfirmed_descriptor_ = file->message_type(17);
  static const int AgentsStuckConfirmed_offsets_[1] = {
  };
  AgentsStuckConfirmed_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AgentsStuckConfirmed_descriptor_,
      AgentsStuckConfirmed::default_instance_,
      AgentsStuckConfirmed_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentsStuckConfirmed, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentsStuckConfirmed, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AgentsStuckConfirmed));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MATSimInterface_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MATSim2ExternPutAgent_descriptor_, &MATSim2ExternPutAgent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MATSim2ExternPutAgent_Agent_descriptor_, &MATSim2ExternPutAgent_Agent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MATSim2ExternHasSpace_descriptor_, &MATSim2ExternHasSpace::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MATSim2ExternHasSpaceConfirmed_descriptor_, &MATSim2ExternHasSpaceConfirmed::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MATSim2ExternPutAgentConfirmed_descriptor_, &MATSim2ExternPutAgentConfirmed::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Extern2MATSim_descriptor_, &Extern2MATSim::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Extern2MATSim_Agent_descriptor_, &Extern2MATSim_Agent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Extern2MATSimConfirmed_descriptor_, &Extern2MATSimConfirmed::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExternSimStepFinished_descriptor_, &ExternSimStepFinished::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExternSimStepFinishedReceived_descriptor_, &ExternSimStepFinishedReceived::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExternDoSimStep_descriptor_, &ExternDoSimStep::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExternDoSimStepReceived_descriptor_, &ExternDoSimStepReceived::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExternalConnect_descriptor_, &ExternalConnect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExternalConnectConfirmed_descriptor_, &ExternalConnectConfirmed::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExternOnPrepareSim_descriptor_, &ExternOnPrepareSim::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExternOnPrepareSimConfirmed_descriptor_, &ExternOnPrepareSimConfirmed::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExternAfterSim_descriptor_, &ExternAfterSim::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExternAfterSimConfirmed_descriptor_, &ExternAfterSimConfirmed::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AgentsStuck_descriptor_, &AgentsStuck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AgentsStuckConfirmed_descriptor_, &AgentsStuckConfirmed::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MATSimInterface_2eproto() {
  delete MATSim2ExternPutAgent::default_instance_;
  delete MATSim2ExternPutAgent_reflection_;
  delete MATSim2ExternPutAgent_Agent::default_instance_;
  delete MATSim2ExternPutAgent_Agent_reflection_;
  delete MATSim2ExternHasSpace::default_instance_;
  delete MATSim2ExternHasSpace_reflection_;
  delete MATSim2ExternHasSpaceConfirmed::default_instance_;
  delete MATSim2ExternHasSpaceConfirmed_reflection_;
  delete MATSim2ExternPutAgentConfirmed::default_instance_;
  delete MATSim2ExternPutAgentConfirmed_reflection_;
  delete Extern2MATSim::default_instance_;
  delete Extern2MATSim_reflection_;
  delete Extern2MATSim_Agent::default_instance_;
  delete Extern2MATSim_Agent_reflection_;
  delete Extern2MATSimConfirmed::default_instance_;
  delete Extern2MATSimConfirmed_reflection_;
  delete ExternSimStepFinished::default_instance_;
  delete ExternSimStepFinished_reflection_;
  delete ExternSimStepFinishedReceived::default_instance_;
  delete ExternSimStepFinishedReceived_reflection_;
  delete ExternDoSimStep::default_instance_;
  delete ExternDoSimStep_reflection_;
  delete ExternDoSimStepReceived::default_instance_;
  delete ExternDoSimStepReceived_reflection_;
  delete ExternalConnect::default_instance_;
  delete ExternalConnect_reflection_;
  delete ExternalConnectConfirmed::default_instance_;
  delete ExternalConnectConfirmed_reflection_;
  delete ExternOnPrepareSim::default_instance_;
  delete ExternOnPrepareSim_reflection_;
  delete ExternOnPrepareSimConfirmed::default_instance_;
  delete ExternOnPrepareSimConfirmed_reflection_;
  delete ExternAfterSim::default_instance_;
  delete ExternAfterSim_reflection_;
  delete ExternAfterSimConfirmed::default_instance_;
  delete ExternAfterSimConfirmed_reflection_;
  delete AgentsStuck::default_instance_;
  delete AgentsStuck_reflection_;
  delete AgentsStuckConfirmed::default_instance_;
  delete AgentsStuckConfirmed_reflection_;
}

void protobuf_AddDesc_MATSimInterface_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025MATSimInterface.proto\"{\n\025MATSim2Extern"
    "PutAgent\022+\n\005agent\030\001 \002(\0132\034.MATSim2ExternP"
    "utAgent.Agent\0325\n\005Agent\022\n\n\002id\030\001 \002(\t\022\021\n\ten"
    "terNode\030\002 \002(\t\022\r\n\005nodes\030\003 \003(\t\"\'\n\025MATSim2E"
    "xternHasSpace\022\016\n\006nodeId\030\001 \002(\t\"2\n\036MATSim2"
    "ExternHasSpaceConfirmed\022\020\n\010hasSpace\030\001 \002("
    "\010\" \n\036MATSim2ExternPutAgentConfirmed\"\\\n\rE"
    "xtern2MATSim\022#\n\005agent\030\017 \002(\0132\024.Extern2MAT"
    "Sim.Agent\032&\n\005Agent\022\n\n\002id\030\001 \002(\t\022\021\n\tleaveN"
    "ode\030\002 \002(\t\"*\n\026Extern2MATSimConfirmed\022\020\n\010a"
    "ccepted\030\001 \002(\010\"%\n\025ExternSimStepFinished\022\014"
    "\n\004time\030\001 \002(\001\"\037\n\035ExternSimStepFinishedRec"
    "eived\"3\n\017ExternDoSimStep\022\020\n\010fromTime\030\001 \002"
    "(\001\022\016\n\006toTime\030\002 \002(\001\"\031\n\027ExternDoSimStepRec"
    "eived\"\021\n\017ExternalConnect\"\032\n\030ExternalConn"
    "ectConfirmed\"\024\n\022ExternOnPrepareSim\"\035\n\033Ex"
    "ternOnPrepareSimConfirmed\"\020\n\016ExternAfter"
    "Sim\"\031\n\027ExternAfterSimConfirmed\"\036\n\013Agents"
    "Stuck\022\017\n\007agentId\030\001 \003(\t\"\026\n\024AgentsStuckCon"
    "firmed2\242\002\n\026MATSimInterfaceService\022;\n\020req"
    "Extern2MATSim\022\016.Extern2MATSim\032\027.Extern2M"
    "ATSimConfirmed\0224\n\rreqAgentStuck\022\014.Agents"
    "Stuck\032\025.AgentsStuckConfirmed\022A\n\022reqExter"
    "nalConnect\022\020.ExternalConnect\032\031.ExternalC"
    "onnectConfirmed\022R\n\030reqExternSimStepFinis"
    "hed\022\026.ExternSimStepFinished\032\036.ExternSimS"
    "tepFinishedReceived2\220\003\n\026ExternInterfaceS"
    "ervice\022S\n\030reqMATSim2ExternHasSpace\022\026.MAT"
    "Sim2ExternHasSpace\032\037.MATSim2ExternHasSpa"
    "ceConfirmed\022S\n\030reqMATSim2ExternPutAgent\022"
    "\026.MATSim2ExternPutAgent\032\037.MATSim2ExternP"
    "utAgentConfirmed\022@\n\022reqExternDoSimStep\022\020"
    ".ExternDoSimStep\032\030.ExternDoSimStepReceiv"
    "ed\022J\n\025reqExternOnPrepareSim\022\023.ExternOnPr"
    "epareSim\032\034.ExternOnPrepareSimConfirmed\022>"
    "\n\021reqExternAfterSim\022\017.ExternAfterSim\032\030.E"
    "xternAfterSimConfirmedB2\n\027playground.gre"
    "gor.protoB\024ProtoMATSimInterface\210\001\001", 1514);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MATSimInterface.proto", &protobuf_RegisterTypes);
  MATSim2ExternPutAgent::default_instance_ = new MATSim2ExternPutAgent();
  MATSim2ExternPutAgent_Agent::default_instance_ = new MATSim2ExternPutAgent_Agent();
  MATSim2ExternHasSpace::default_instance_ = new MATSim2ExternHasSpace();
  MATSim2ExternHasSpaceConfirmed::default_instance_ = new MATSim2ExternHasSpaceConfirmed();
  MATSim2ExternPutAgentConfirmed::default_instance_ = new MATSim2ExternPutAgentConfirmed();
  Extern2MATSim::default_instance_ = new Extern2MATSim();
  Extern2MATSim_Agent::default_instance_ = new Extern2MATSim_Agent();
  Extern2MATSimConfirmed::default_instance_ = new Extern2MATSimConfirmed();
  ExternSimStepFinished::default_instance_ = new ExternSimStepFinished();
  ExternSimStepFinishedReceived::default_instance_ = new ExternSimStepFinishedReceived();
  ExternDoSimStep::default_instance_ = new ExternDoSimStep();
  ExternDoSimStepReceived::default_instance_ = new ExternDoSimStepReceived();
  ExternalConnect::default_instance_ = new ExternalConnect();
  ExternalConnectConfirmed::default_instance_ = new ExternalConnectConfirmed();
  ExternOnPrepareSim::default_instance_ = new ExternOnPrepareSim();
  ExternOnPrepareSimConfirmed::default_instance_ = new ExternOnPrepareSimConfirmed();
  ExternAfterSim::default_instance_ = new ExternAfterSim();
  ExternAfterSimConfirmed::default_instance_ = new ExternAfterSimConfirmed();
  AgentsStuck::default_instance_ = new AgentsStuck();
  AgentsStuckConfirmed::default_instance_ = new AgentsStuckConfirmed();
  MATSim2ExternPutAgent::default_instance_->InitAsDefaultInstance();
  MATSim2ExternPutAgent_Agent::default_instance_->InitAsDefaultInstance();
  MATSim2ExternHasSpace::default_instance_->InitAsDefaultInstance();
  MATSim2ExternHasSpaceConfirmed::default_instance_->InitAsDefaultInstance();
  MATSim2ExternPutAgentConfirmed::default_instance_->InitAsDefaultInstance();
  Extern2MATSim::default_instance_->InitAsDefaultInstance();
  Extern2MATSim_Agent::default_instance_->InitAsDefaultInstance();
  Extern2MATSimConfirmed::default_instance_->InitAsDefaultInstance();
  ExternSimStepFinished::default_instance_->InitAsDefaultInstance();
  ExternSimStepFinishedReceived::default_instance_->InitAsDefaultInstance();
  ExternDoSimStep::default_instance_->InitAsDefaultInstance();
  ExternDoSimStepReceived::default_instance_->InitAsDefaultInstance();
  ExternalConnect::default_instance_->InitAsDefaultInstance();
  ExternalConnectConfirmed::default_instance_->InitAsDefaultInstance();
  ExternOnPrepareSim::default_instance_->InitAsDefaultInstance();
  ExternOnPrepareSimConfirmed::default_instance_->InitAsDefaultInstance();
  ExternAfterSim::default_instance_->InitAsDefaultInstance();
  ExternAfterSimConfirmed::default_instance_->InitAsDefaultInstance();
  AgentsStuck::default_instance_->InitAsDefaultInstance();
  AgentsStuckConfirmed::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MATSimInterface_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MATSimInterface_2eproto {
  StaticDescriptorInitializer_MATSimInterface_2eproto() {
    protobuf_AddDesc_MATSimInterface_2eproto();
  }
} static_descriptor_initializer_MATSimInterface_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MATSim2ExternPutAgent_Agent::kIdFieldNumber;
const int MATSim2ExternPutAgent_Agent::kEnterNodeFieldNumber;
const int MATSim2ExternPutAgent_Agent::kNodesFieldNumber;
#endif  // !_MSC_VER

MATSim2ExternPutAgent_Agent::MATSim2ExternPutAgent_Agent()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MATSim2ExternPutAgent_Agent::InitAsDefaultInstance() {
}

MATSim2ExternPutAgent_Agent::MATSim2ExternPutAgent_Agent(const MATSim2ExternPutAgent_Agent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MATSim2ExternPutAgent_Agent::SharedCtor() {
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  enternode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MATSim2ExternPutAgent_Agent::~MATSim2ExternPutAgent_Agent() {
  SharedDtor();
}

void MATSim2ExternPutAgent_Agent::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (enternode_ != &::google::protobuf::internal::kEmptyString) {
    delete enternode_;
  }
  if (this != default_instance_) {
  }
}

void MATSim2ExternPutAgent_Agent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MATSim2ExternPutAgent_Agent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MATSim2ExternPutAgent_Agent_descriptor_;
}

const MATSim2ExternPutAgent_Agent& MATSim2ExternPutAgent_Agent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

MATSim2ExternPutAgent_Agent* MATSim2ExternPutAgent_Agent::default_instance_ = NULL;

MATSim2ExternPutAgent_Agent* MATSim2ExternPutAgent_Agent::New() const {
  return new MATSim2ExternPutAgent_Agent;
}

void MATSim2ExternPutAgent_Agent::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    if (has_enternode()) {
      if (enternode_ != &::google::protobuf::internal::kEmptyString) {
        enternode_->clear();
      }
    }
  }
  nodes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MATSim2ExternPutAgent_Agent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_enterNode;
        break;
      }

      // required string enterNode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_enterNode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_enternode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->enternode().data(), this->enternode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_nodes;
        break;
      }

      // repeated string nodes = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nodes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_nodes()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nodes(this->nodes_size() - 1).data(),
            this->nodes(this->nodes_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_nodes;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MATSim2ExternPutAgent_Agent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(), output);
  }

  // required string enterNode = 2;
  if (has_enternode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->enternode().data(), this->enternode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->enternode(), output);
  }

  // repeated string nodes = 3;
  for (int i = 0; i < this->nodes_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->nodes(i).data(), this->nodes(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->nodes(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MATSim2ExternPutAgent_Agent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string enterNode = 2;
  if (has_enternode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->enternode().data(), this->enternode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->enternode(), target);
  }

  // repeated string nodes = 3;
  for (int i = 0; i < this->nodes_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nodes(i).data(), this->nodes(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->nodes(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MATSim2ExternPutAgent_Agent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // required string enterNode = 2;
    if (has_enternode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->enternode());
    }

  }
  // repeated string nodes = 3;
  total_size += 1 * this->nodes_size();
  for (int i = 0; i < this->nodes_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->nodes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MATSim2ExternPutAgent_Agent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MATSim2ExternPutAgent_Agent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MATSim2ExternPutAgent_Agent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MATSim2ExternPutAgent_Agent::MergeFrom(const MATSim2ExternPutAgent_Agent& from) {
  GOOGLE_CHECK_NE(&from, this);
  nodes_.MergeFrom(from.nodes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_enternode()) {
      set_enternode(from.enternode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MATSim2ExternPutAgent_Agent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MATSim2ExternPutAgent_Agent::CopyFrom(const MATSim2ExternPutAgent_Agent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MATSim2ExternPutAgent_Agent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MATSim2ExternPutAgent_Agent::Swap(MATSim2ExternPutAgent_Agent* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(enternode_, other->enternode_);
    nodes_.Swap(&other->nodes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MATSim2ExternPutAgent_Agent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MATSim2ExternPutAgent_Agent_descriptor_;
  metadata.reflection = MATSim2ExternPutAgent_Agent_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MATSim2ExternPutAgent::kAgentFieldNumber;
#endif  // !_MSC_VER

MATSim2ExternPutAgent::MATSim2ExternPutAgent()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MATSim2ExternPutAgent::InitAsDefaultInstance() {
  agent_ = const_cast< ::MATSim2ExternPutAgent_Agent*>(&::MATSim2ExternPutAgent_Agent::default_instance());
}

MATSim2ExternPutAgent::MATSim2ExternPutAgent(const MATSim2ExternPutAgent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MATSim2ExternPutAgent::SharedCtor() {
  _cached_size_ = 0;
  agent_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MATSim2ExternPutAgent::~MATSim2ExternPutAgent() {
  SharedDtor();
}

void MATSim2ExternPutAgent::SharedDtor() {
  if (this != default_instance_) {
    delete agent_;
  }
}

void MATSim2ExternPutAgent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MATSim2ExternPutAgent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MATSim2ExternPutAgent_descriptor_;
}

const MATSim2ExternPutAgent& MATSim2ExternPutAgent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

MATSim2ExternPutAgent* MATSim2ExternPutAgent::default_instance_ = NULL;

MATSim2ExternPutAgent* MATSim2ExternPutAgent::New() const {
  return new MATSim2ExternPutAgent;
}

void MATSim2ExternPutAgent::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_agent()) {
      if (agent_ != NULL) agent_->::MATSim2ExternPutAgent_Agent::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MATSim2ExternPutAgent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MATSim2ExternPutAgent.Agent agent = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_agent()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MATSim2ExternPutAgent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .MATSim2ExternPutAgent.Agent agent = 1;
  if (has_agent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->agent(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MATSim2ExternPutAgent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .MATSim2ExternPutAgent.Agent agent = 1;
  if (has_agent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->agent(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MATSim2ExternPutAgent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MATSim2ExternPutAgent.Agent agent = 1;
    if (has_agent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->agent());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MATSim2ExternPutAgent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MATSim2ExternPutAgent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MATSim2ExternPutAgent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MATSim2ExternPutAgent::MergeFrom(const MATSim2ExternPutAgent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_agent()) {
      mutable_agent()->::MATSim2ExternPutAgent_Agent::MergeFrom(from.agent());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MATSim2ExternPutAgent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MATSim2ExternPutAgent::CopyFrom(const MATSim2ExternPutAgent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MATSim2ExternPutAgent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_agent()) {
    if (!this->agent().IsInitialized()) return false;
  }
  return true;
}

void MATSim2ExternPutAgent::Swap(MATSim2ExternPutAgent* other) {
  if (other != this) {
    std::swap(agent_, other->agent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MATSim2ExternPutAgent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MATSim2ExternPutAgent_descriptor_;
  metadata.reflection = MATSim2ExternPutAgent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MATSim2ExternHasSpace::kNodeIdFieldNumber;
#endif  // !_MSC_VER

MATSim2ExternHasSpace::MATSim2ExternHasSpace()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MATSim2ExternHasSpace::InitAsDefaultInstance() {
}

MATSim2ExternHasSpace::MATSim2ExternHasSpace(const MATSim2ExternHasSpace& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MATSim2ExternHasSpace::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MATSim2ExternHasSpace::~MATSim2ExternHasSpace() {
  SharedDtor();
}

void MATSim2ExternHasSpace::SharedDtor() {
  if (nodeid_ != &::google::protobuf::internal::kEmptyString) {
    delete nodeid_;
  }
  if (this != default_instance_) {
  }
}

void MATSim2ExternHasSpace::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MATSim2ExternHasSpace::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MATSim2ExternHasSpace_descriptor_;
}

const MATSim2ExternHasSpace& MATSim2ExternHasSpace::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

MATSim2ExternHasSpace* MATSim2ExternHasSpace::default_instance_ = NULL;

MATSim2ExternHasSpace* MATSim2ExternHasSpace::New() const {
  return new MATSim2ExternHasSpace;
}

void MATSim2ExternHasSpace::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_nodeid()) {
      if (nodeid_ != &::google::protobuf::internal::kEmptyString) {
        nodeid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MATSim2ExternHasSpace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string nodeId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nodeid().data(), this->nodeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MATSim2ExternHasSpace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string nodeId = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nodeid().data(), this->nodeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->nodeid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MATSim2ExternHasSpace::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string nodeId = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nodeid().data(), this->nodeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nodeid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MATSim2ExternHasSpace::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string nodeId = 1;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nodeid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MATSim2ExternHasSpace::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MATSim2ExternHasSpace* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MATSim2ExternHasSpace*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MATSim2ExternHasSpace::MergeFrom(const MATSim2ExternHasSpace& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MATSim2ExternHasSpace::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MATSim2ExternHasSpace::CopyFrom(const MATSim2ExternHasSpace& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MATSim2ExternHasSpace::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MATSim2ExternHasSpace::Swap(MATSim2ExternHasSpace* other) {
  if (other != this) {
    std::swap(nodeid_, other->nodeid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MATSim2ExternHasSpace::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MATSim2ExternHasSpace_descriptor_;
  metadata.reflection = MATSim2ExternHasSpace_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MATSim2ExternHasSpaceConfirmed::kHasSpaceFieldNumber;
#endif  // !_MSC_VER

MATSim2ExternHasSpaceConfirmed::MATSim2ExternHasSpaceConfirmed()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MATSim2ExternHasSpaceConfirmed::InitAsDefaultInstance() {
}

MATSim2ExternHasSpaceConfirmed::MATSim2ExternHasSpaceConfirmed(const MATSim2ExternHasSpaceConfirmed& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MATSim2ExternHasSpaceConfirmed::SharedCtor() {
  _cached_size_ = 0;
  hasspace_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MATSim2ExternHasSpaceConfirmed::~MATSim2ExternHasSpaceConfirmed() {
  SharedDtor();
}

void MATSim2ExternHasSpaceConfirmed::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MATSim2ExternHasSpaceConfirmed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MATSim2ExternHasSpaceConfirmed::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MATSim2ExternHasSpaceConfirmed_descriptor_;
}

const MATSim2ExternHasSpaceConfirmed& MATSim2ExternHasSpaceConfirmed::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

MATSim2ExternHasSpaceConfirmed* MATSim2ExternHasSpaceConfirmed::default_instance_ = NULL;

MATSim2ExternHasSpaceConfirmed* MATSim2ExternHasSpaceConfirmed::New() const {
  return new MATSim2ExternHasSpaceConfirmed;
}

void MATSim2ExternHasSpaceConfirmed::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    hasspace_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MATSim2ExternHasSpaceConfirmed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool hasSpace = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasspace_)));
          set_has_hasspace();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MATSim2ExternHasSpaceConfirmed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool hasSpace = 1;
  if (has_hasspace()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->hasspace(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MATSim2ExternHasSpaceConfirmed::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool hasSpace = 1;
  if (has_hasspace()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->hasspace(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MATSim2ExternHasSpaceConfirmed::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool hasSpace = 1;
    if (has_hasspace()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MATSim2ExternHasSpaceConfirmed::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MATSim2ExternHasSpaceConfirmed* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MATSim2ExternHasSpaceConfirmed*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MATSim2ExternHasSpaceConfirmed::MergeFrom(const MATSim2ExternHasSpaceConfirmed& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hasspace()) {
      set_hasspace(from.hasspace());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MATSim2ExternHasSpaceConfirmed::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MATSim2ExternHasSpaceConfirmed::CopyFrom(const MATSim2ExternHasSpaceConfirmed& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MATSim2ExternHasSpaceConfirmed::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MATSim2ExternHasSpaceConfirmed::Swap(MATSim2ExternHasSpaceConfirmed* other) {
  if (other != this) {
    std::swap(hasspace_, other->hasspace_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MATSim2ExternHasSpaceConfirmed::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MATSim2ExternHasSpaceConfirmed_descriptor_;
  metadata.reflection = MATSim2ExternHasSpaceConfirmed_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MATSim2ExternPutAgentConfirmed::MATSim2ExternPutAgentConfirmed()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MATSim2ExternPutAgentConfirmed::InitAsDefaultInstance() {
}

MATSim2ExternPutAgentConfirmed::MATSim2ExternPutAgentConfirmed(const MATSim2ExternPutAgentConfirmed& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MATSim2ExternPutAgentConfirmed::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MATSim2ExternPutAgentConfirmed::~MATSim2ExternPutAgentConfirmed() {
  SharedDtor();
}

void MATSim2ExternPutAgentConfirmed::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MATSim2ExternPutAgentConfirmed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MATSim2ExternPutAgentConfirmed::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MATSim2ExternPutAgentConfirmed_descriptor_;
}

const MATSim2ExternPutAgentConfirmed& MATSim2ExternPutAgentConfirmed::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

MATSim2ExternPutAgentConfirmed* MATSim2ExternPutAgentConfirmed::default_instance_ = NULL;

MATSim2ExternPutAgentConfirmed* MATSim2ExternPutAgentConfirmed::New() const {
  return new MATSim2ExternPutAgentConfirmed;
}

void MATSim2ExternPutAgentConfirmed::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MATSim2ExternPutAgentConfirmed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void MATSim2ExternPutAgentConfirmed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MATSim2ExternPutAgentConfirmed::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MATSim2ExternPutAgentConfirmed::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MATSim2ExternPutAgentConfirmed::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MATSim2ExternPutAgentConfirmed* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MATSim2ExternPutAgentConfirmed*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MATSim2ExternPutAgentConfirmed::MergeFrom(const MATSim2ExternPutAgentConfirmed& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MATSim2ExternPutAgentConfirmed::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MATSim2ExternPutAgentConfirmed::CopyFrom(const MATSim2ExternPutAgentConfirmed& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MATSim2ExternPutAgentConfirmed::IsInitialized() const {

  return true;
}

void MATSim2ExternPutAgentConfirmed::Swap(MATSim2ExternPutAgentConfirmed* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MATSim2ExternPutAgentConfirmed::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MATSim2ExternPutAgentConfirmed_descriptor_;
  metadata.reflection = MATSim2ExternPutAgentConfirmed_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Extern2MATSim_Agent::kIdFieldNumber;
const int Extern2MATSim_Agent::kLeaveNodeFieldNumber;
#endif  // !_MSC_VER

Extern2MATSim_Agent::Extern2MATSim_Agent()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Extern2MATSim_Agent::InitAsDefaultInstance() {
}

Extern2MATSim_Agent::Extern2MATSim_Agent(const Extern2MATSim_Agent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Extern2MATSim_Agent::SharedCtor() {
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  leavenode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Extern2MATSim_Agent::~Extern2MATSim_Agent() {
  SharedDtor();
}

void Extern2MATSim_Agent::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (leavenode_ != &::google::protobuf::internal::kEmptyString) {
    delete leavenode_;
  }
  if (this != default_instance_) {
  }
}

void Extern2MATSim_Agent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Extern2MATSim_Agent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Extern2MATSim_Agent_descriptor_;
}

const Extern2MATSim_Agent& Extern2MATSim_Agent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

Extern2MATSim_Agent* Extern2MATSim_Agent::default_instance_ = NULL;

Extern2MATSim_Agent* Extern2MATSim_Agent::New() const {
  return new Extern2MATSim_Agent;
}

void Extern2MATSim_Agent::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    if (has_leavenode()) {
      if (leavenode_ != &::google::protobuf::internal::kEmptyString) {
        leavenode_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Extern2MATSim_Agent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_leaveNode;
        break;
      }

      // required string leaveNode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_leaveNode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leavenode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->leavenode().data(), this->leavenode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Extern2MATSim_Agent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(), output);
  }

  // required string leaveNode = 2;
  if (has_leavenode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leavenode().data(), this->leavenode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->leavenode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Extern2MATSim_Agent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string leaveNode = 2;
  if (has_leavenode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leavenode().data(), this->leavenode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->leavenode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Extern2MATSim_Agent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // required string leaveNode = 2;
    if (has_leavenode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->leavenode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Extern2MATSim_Agent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Extern2MATSim_Agent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Extern2MATSim_Agent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Extern2MATSim_Agent::MergeFrom(const Extern2MATSim_Agent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_leavenode()) {
      set_leavenode(from.leavenode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Extern2MATSim_Agent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Extern2MATSim_Agent::CopyFrom(const Extern2MATSim_Agent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Extern2MATSim_Agent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Extern2MATSim_Agent::Swap(Extern2MATSim_Agent* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(leavenode_, other->leavenode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Extern2MATSim_Agent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Extern2MATSim_Agent_descriptor_;
  metadata.reflection = Extern2MATSim_Agent_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Extern2MATSim::kAgentFieldNumber;
#endif  // !_MSC_VER

Extern2MATSim::Extern2MATSim()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Extern2MATSim::InitAsDefaultInstance() {
  agent_ = const_cast< ::Extern2MATSim_Agent*>(&::Extern2MATSim_Agent::default_instance());
}

Extern2MATSim::Extern2MATSim(const Extern2MATSim& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Extern2MATSim::SharedCtor() {
  _cached_size_ = 0;
  agent_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Extern2MATSim::~Extern2MATSim() {
  SharedDtor();
}

void Extern2MATSim::SharedDtor() {
  if (this != default_instance_) {
    delete agent_;
  }
}

void Extern2MATSim::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Extern2MATSim::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Extern2MATSim_descriptor_;
}

const Extern2MATSim& Extern2MATSim::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

Extern2MATSim* Extern2MATSim::default_instance_ = NULL;

Extern2MATSim* Extern2MATSim::New() const {
  return new Extern2MATSim;
}

void Extern2MATSim::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_agent()) {
      if (agent_ != NULL) agent_->::Extern2MATSim_Agent::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Extern2MATSim::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Extern2MATSim.Agent agent = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_agent()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Extern2MATSim::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .Extern2MATSim.Agent agent = 15;
  if (has_agent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->agent(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Extern2MATSim::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Extern2MATSim.Agent agent = 15;
  if (has_agent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->agent(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Extern2MATSim::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Extern2MATSim.Agent agent = 15;
    if (has_agent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->agent());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Extern2MATSim::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Extern2MATSim* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Extern2MATSim*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Extern2MATSim::MergeFrom(const Extern2MATSim& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_agent()) {
      mutable_agent()->::Extern2MATSim_Agent::MergeFrom(from.agent());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Extern2MATSim::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Extern2MATSim::CopyFrom(const Extern2MATSim& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Extern2MATSim::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_agent()) {
    if (!this->agent().IsInitialized()) return false;
  }
  return true;
}

void Extern2MATSim::Swap(Extern2MATSim* other) {
  if (other != this) {
    std::swap(agent_, other->agent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Extern2MATSim::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Extern2MATSim_descriptor_;
  metadata.reflection = Extern2MATSim_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Extern2MATSimConfirmed::kAcceptedFieldNumber;
#endif  // !_MSC_VER

Extern2MATSimConfirmed::Extern2MATSimConfirmed()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Extern2MATSimConfirmed::InitAsDefaultInstance() {
}

Extern2MATSimConfirmed::Extern2MATSimConfirmed(const Extern2MATSimConfirmed& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Extern2MATSimConfirmed::SharedCtor() {
  _cached_size_ = 0;
  accepted_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Extern2MATSimConfirmed::~Extern2MATSimConfirmed() {
  SharedDtor();
}

void Extern2MATSimConfirmed::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Extern2MATSimConfirmed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Extern2MATSimConfirmed::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Extern2MATSimConfirmed_descriptor_;
}

const Extern2MATSimConfirmed& Extern2MATSimConfirmed::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

Extern2MATSimConfirmed* Extern2MATSimConfirmed::default_instance_ = NULL;

Extern2MATSimConfirmed* Extern2MATSimConfirmed::New() const {
  return new Extern2MATSimConfirmed;
}

void Extern2MATSimConfirmed::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    accepted_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Extern2MATSimConfirmed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool accepted = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &accepted_)));
          set_has_accepted();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Extern2MATSimConfirmed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool accepted = 1;
  if (has_accepted()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->accepted(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Extern2MATSimConfirmed::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool accepted = 1;
  if (has_accepted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->accepted(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Extern2MATSimConfirmed::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool accepted = 1;
    if (has_accepted()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Extern2MATSimConfirmed::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Extern2MATSimConfirmed* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Extern2MATSimConfirmed*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Extern2MATSimConfirmed::MergeFrom(const Extern2MATSimConfirmed& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_accepted()) {
      set_accepted(from.accepted());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Extern2MATSimConfirmed::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Extern2MATSimConfirmed::CopyFrom(const Extern2MATSimConfirmed& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Extern2MATSimConfirmed::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Extern2MATSimConfirmed::Swap(Extern2MATSimConfirmed* other) {
  if (other != this) {
    std::swap(accepted_, other->accepted_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Extern2MATSimConfirmed::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Extern2MATSimConfirmed_descriptor_;
  metadata.reflection = Extern2MATSimConfirmed_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExternSimStepFinished::kTimeFieldNumber;
#endif  // !_MSC_VER

ExternSimStepFinished::ExternSimStepFinished()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExternSimStepFinished::InitAsDefaultInstance() {
}

ExternSimStepFinished::ExternSimStepFinished(const ExternSimStepFinished& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExternSimStepFinished::SharedCtor() {
  _cached_size_ = 0;
  time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExternSimStepFinished::~ExternSimStepFinished() {
  SharedDtor();
}

void ExternSimStepFinished::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExternSimStepFinished::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternSimStepFinished::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExternSimStepFinished_descriptor_;
}

const ExternSimStepFinished& ExternSimStepFinished::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

ExternSimStepFinished* ExternSimStepFinished::default_instance_ = NULL;

ExternSimStepFinished* ExternSimStepFinished::New() const {
  return new ExternSimStepFinished;
}

void ExternSimStepFinished::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExternSimStepFinished::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ExternSimStepFinished::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required double time = 1;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExternSimStepFinished::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required double time = 1;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExternSimStepFinished::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double time = 1;
    if (has_time()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternSimStepFinished::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExternSimStepFinished* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExternSimStepFinished*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExternSimStepFinished::MergeFrom(const ExternSimStepFinished& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExternSimStepFinished::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternSimStepFinished::CopyFrom(const ExternSimStepFinished& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternSimStepFinished::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ExternSimStepFinished::Swap(ExternSimStepFinished* other) {
  if (other != this) {
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExternSimStepFinished::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExternSimStepFinished_descriptor_;
  metadata.reflection = ExternSimStepFinished_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ExternSimStepFinishedReceived::ExternSimStepFinishedReceived()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExternSimStepFinishedReceived::InitAsDefaultInstance() {
}

ExternSimStepFinishedReceived::ExternSimStepFinishedReceived(const ExternSimStepFinishedReceived& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExternSimStepFinishedReceived::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExternSimStepFinishedReceived::~ExternSimStepFinishedReceived() {
  SharedDtor();
}

void ExternSimStepFinishedReceived::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExternSimStepFinishedReceived::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternSimStepFinishedReceived::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExternSimStepFinishedReceived_descriptor_;
}

const ExternSimStepFinishedReceived& ExternSimStepFinishedReceived::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

ExternSimStepFinishedReceived* ExternSimStepFinishedReceived::default_instance_ = NULL;

ExternSimStepFinishedReceived* ExternSimStepFinishedReceived::New() const {
  return new ExternSimStepFinishedReceived;
}

void ExternSimStepFinishedReceived::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExternSimStepFinishedReceived::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ExternSimStepFinishedReceived::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExternSimStepFinishedReceived::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExternSimStepFinishedReceived::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternSimStepFinishedReceived::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExternSimStepFinishedReceived* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExternSimStepFinishedReceived*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExternSimStepFinishedReceived::MergeFrom(const ExternSimStepFinishedReceived& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExternSimStepFinishedReceived::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternSimStepFinishedReceived::CopyFrom(const ExternSimStepFinishedReceived& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternSimStepFinishedReceived::IsInitialized() const {

  return true;
}

void ExternSimStepFinishedReceived::Swap(ExternSimStepFinishedReceived* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExternSimStepFinishedReceived::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExternSimStepFinishedReceived_descriptor_;
  metadata.reflection = ExternSimStepFinishedReceived_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExternDoSimStep::kFromTimeFieldNumber;
const int ExternDoSimStep::kToTimeFieldNumber;
#endif  // !_MSC_VER

ExternDoSimStep::ExternDoSimStep()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExternDoSimStep::InitAsDefaultInstance() {
}

ExternDoSimStep::ExternDoSimStep(const ExternDoSimStep& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExternDoSimStep::SharedCtor() {
  _cached_size_ = 0;
  fromtime_ = 0;
  totime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExternDoSimStep::~ExternDoSimStep() {
  SharedDtor();
}

void ExternDoSimStep::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExternDoSimStep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternDoSimStep::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExternDoSimStep_descriptor_;
}

const ExternDoSimStep& ExternDoSimStep::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

ExternDoSimStep* ExternDoSimStep::default_instance_ = NULL;

ExternDoSimStep* ExternDoSimStep::New() const {
  return new ExternDoSimStep;
}

void ExternDoSimStep::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fromtime_ = 0;
    totime_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExternDoSimStep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double fromTime = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fromtime_)));
          set_has_fromtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(17)) goto parse_toTime;
        break;
      }

      // required double toTime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_toTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &totime_)));
          set_has_totime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ExternDoSimStep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required double fromTime = 1;
  if (has_fromtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->fromtime(), output);
  }

  // required double toTime = 2;
  if (has_totime()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->totime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExternDoSimStep::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required double fromTime = 1;
  if (has_fromtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->fromtime(), target);
  }

  // required double toTime = 2;
  if (has_totime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->totime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExternDoSimStep::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double fromTime = 1;
    if (has_fromtime()) {
      total_size += 1 + 8;
    }

    // required double toTime = 2;
    if (has_totime()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternDoSimStep::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExternDoSimStep* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExternDoSimStep*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExternDoSimStep::MergeFrom(const ExternDoSimStep& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fromtime()) {
      set_fromtime(from.fromtime());
    }
    if (from.has_totime()) {
      set_totime(from.totime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExternDoSimStep::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternDoSimStep::CopyFrom(const ExternDoSimStep& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternDoSimStep::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ExternDoSimStep::Swap(ExternDoSimStep* other) {
  if (other != this) {
    std::swap(fromtime_, other->fromtime_);
    std::swap(totime_, other->totime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExternDoSimStep::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExternDoSimStep_descriptor_;
  metadata.reflection = ExternDoSimStep_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ExternDoSimStepReceived::ExternDoSimStepReceived()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExternDoSimStepReceived::InitAsDefaultInstance() {
}

ExternDoSimStepReceived::ExternDoSimStepReceived(const ExternDoSimStepReceived& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExternDoSimStepReceived::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExternDoSimStepReceived::~ExternDoSimStepReceived() {
  SharedDtor();
}

void ExternDoSimStepReceived::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExternDoSimStepReceived::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternDoSimStepReceived::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExternDoSimStepReceived_descriptor_;
}

const ExternDoSimStepReceived& ExternDoSimStepReceived::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

ExternDoSimStepReceived* ExternDoSimStepReceived::default_instance_ = NULL;

ExternDoSimStepReceived* ExternDoSimStepReceived::New() const {
  return new ExternDoSimStepReceived;
}

void ExternDoSimStepReceived::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExternDoSimStepReceived::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ExternDoSimStepReceived::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExternDoSimStepReceived::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExternDoSimStepReceived::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternDoSimStepReceived::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExternDoSimStepReceived* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExternDoSimStepReceived*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExternDoSimStepReceived::MergeFrom(const ExternDoSimStepReceived& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExternDoSimStepReceived::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternDoSimStepReceived::CopyFrom(const ExternDoSimStepReceived& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternDoSimStepReceived::IsInitialized() const {

  return true;
}

void ExternDoSimStepReceived::Swap(ExternDoSimStepReceived* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExternDoSimStepReceived::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExternDoSimStepReceived_descriptor_;
  metadata.reflection = ExternDoSimStepReceived_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ExternalConnect::ExternalConnect()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExternalConnect::InitAsDefaultInstance() {
}

ExternalConnect::ExternalConnect(const ExternalConnect& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExternalConnect::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExternalConnect::~ExternalConnect() {
  SharedDtor();
}

void ExternalConnect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExternalConnect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternalConnect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExternalConnect_descriptor_;
}

const ExternalConnect& ExternalConnect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

ExternalConnect* ExternalConnect::default_instance_ = NULL;

ExternalConnect* ExternalConnect::New() const {
  return new ExternalConnect;
}

void ExternalConnect::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExternalConnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ExternalConnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExternalConnect::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExternalConnect::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternalConnect::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExternalConnect* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExternalConnect*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExternalConnect::MergeFrom(const ExternalConnect& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExternalConnect::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternalConnect::CopyFrom(const ExternalConnect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternalConnect::IsInitialized() const {

  return true;
}

void ExternalConnect::Swap(ExternalConnect* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExternalConnect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExternalConnect_descriptor_;
  metadata.reflection = ExternalConnect_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ExternalConnectConfirmed::ExternalConnectConfirmed()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExternalConnectConfirmed::InitAsDefaultInstance() {
}

ExternalConnectConfirmed::ExternalConnectConfirmed(const ExternalConnectConfirmed& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExternalConnectConfirmed::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExternalConnectConfirmed::~ExternalConnectConfirmed() {
  SharedDtor();
}

void ExternalConnectConfirmed::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExternalConnectConfirmed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternalConnectConfirmed::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExternalConnectConfirmed_descriptor_;
}

const ExternalConnectConfirmed& ExternalConnectConfirmed::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

ExternalConnectConfirmed* ExternalConnectConfirmed::default_instance_ = NULL;

ExternalConnectConfirmed* ExternalConnectConfirmed::New() const {
  return new ExternalConnectConfirmed;
}

void ExternalConnectConfirmed::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExternalConnectConfirmed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ExternalConnectConfirmed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExternalConnectConfirmed::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExternalConnectConfirmed::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternalConnectConfirmed::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExternalConnectConfirmed* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExternalConnectConfirmed*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExternalConnectConfirmed::MergeFrom(const ExternalConnectConfirmed& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExternalConnectConfirmed::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternalConnectConfirmed::CopyFrom(const ExternalConnectConfirmed& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternalConnectConfirmed::IsInitialized() const {

  return true;
}

void ExternalConnectConfirmed::Swap(ExternalConnectConfirmed* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExternalConnectConfirmed::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExternalConnectConfirmed_descriptor_;
  metadata.reflection = ExternalConnectConfirmed_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ExternOnPrepareSim::ExternOnPrepareSim()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExternOnPrepareSim::InitAsDefaultInstance() {
}

ExternOnPrepareSim::ExternOnPrepareSim(const ExternOnPrepareSim& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExternOnPrepareSim::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExternOnPrepareSim::~ExternOnPrepareSim() {
  SharedDtor();
}

void ExternOnPrepareSim::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExternOnPrepareSim::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternOnPrepareSim::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExternOnPrepareSim_descriptor_;
}

const ExternOnPrepareSim& ExternOnPrepareSim::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

ExternOnPrepareSim* ExternOnPrepareSim::default_instance_ = NULL;

ExternOnPrepareSim* ExternOnPrepareSim::New() const {
  return new ExternOnPrepareSim;
}

void ExternOnPrepareSim::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExternOnPrepareSim::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ExternOnPrepareSim::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExternOnPrepareSim::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExternOnPrepareSim::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternOnPrepareSim::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExternOnPrepareSim* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExternOnPrepareSim*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExternOnPrepareSim::MergeFrom(const ExternOnPrepareSim& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExternOnPrepareSim::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternOnPrepareSim::CopyFrom(const ExternOnPrepareSim& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternOnPrepareSim::IsInitialized() const {

  return true;
}

void ExternOnPrepareSim::Swap(ExternOnPrepareSim* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExternOnPrepareSim::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExternOnPrepareSim_descriptor_;
  metadata.reflection = ExternOnPrepareSim_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ExternOnPrepareSimConfirmed::ExternOnPrepareSimConfirmed()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExternOnPrepareSimConfirmed::InitAsDefaultInstance() {
}

ExternOnPrepareSimConfirmed::ExternOnPrepareSimConfirmed(const ExternOnPrepareSimConfirmed& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExternOnPrepareSimConfirmed::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExternOnPrepareSimConfirmed::~ExternOnPrepareSimConfirmed() {
  SharedDtor();
}

void ExternOnPrepareSimConfirmed::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExternOnPrepareSimConfirmed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternOnPrepareSimConfirmed::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExternOnPrepareSimConfirmed_descriptor_;
}

const ExternOnPrepareSimConfirmed& ExternOnPrepareSimConfirmed::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

ExternOnPrepareSimConfirmed* ExternOnPrepareSimConfirmed::default_instance_ = NULL;

ExternOnPrepareSimConfirmed* ExternOnPrepareSimConfirmed::New() const {
  return new ExternOnPrepareSimConfirmed;
}

void ExternOnPrepareSimConfirmed::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExternOnPrepareSimConfirmed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ExternOnPrepareSimConfirmed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExternOnPrepareSimConfirmed::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExternOnPrepareSimConfirmed::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternOnPrepareSimConfirmed::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExternOnPrepareSimConfirmed* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExternOnPrepareSimConfirmed*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExternOnPrepareSimConfirmed::MergeFrom(const ExternOnPrepareSimConfirmed& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExternOnPrepareSimConfirmed::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternOnPrepareSimConfirmed::CopyFrom(const ExternOnPrepareSimConfirmed& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternOnPrepareSimConfirmed::IsInitialized() const {

  return true;
}

void ExternOnPrepareSimConfirmed::Swap(ExternOnPrepareSimConfirmed* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExternOnPrepareSimConfirmed::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExternOnPrepareSimConfirmed_descriptor_;
  metadata.reflection = ExternOnPrepareSimConfirmed_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ExternAfterSim::ExternAfterSim()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExternAfterSim::InitAsDefaultInstance() {
}

ExternAfterSim::ExternAfterSim(const ExternAfterSim& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExternAfterSim::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExternAfterSim::~ExternAfterSim() {
  SharedDtor();
}

void ExternAfterSim::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExternAfterSim::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternAfterSim::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExternAfterSim_descriptor_;
}

const ExternAfterSim& ExternAfterSim::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

ExternAfterSim* ExternAfterSim::default_instance_ = NULL;

ExternAfterSim* ExternAfterSim::New() const {
  return new ExternAfterSim;
}

void ExternAfterSim::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExternAfterSim::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ExternAfterSim::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExternAfterSim::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExternAfterSim::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternAfterSim::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExternAfterSim* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExternAfterSim*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExternAfterSim::MergeFrom(const ExternAfterSim& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExternAfterSim::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternAfterSim::CopyFrom(const ExternAfterSim& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternAfterSim::IsInitialized() const {

  return true;
}

void ExternAfterSim::Swap(ExternAfterSim* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExternAfterSim::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExternAfterSim_descriptor_;
  metadata.reflection = ExternAfterSim_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ExternAfterSimConfirmed::ExternAfterSimConfirmed()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExternAfterSimConfirmed::InitAsDefaultInstance() {
}

ExternAfterSimConfirmed::ExternAfterSimConfirmed(const ExternAfterSimConfirmed& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExternAfterSimConfirmed::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExternAfterSimConfirmed::~ExternAfterSimConfirmed() {
  SharedDtor();
}

void ExternAfterSimConfirmed::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExternAfterSimConfirmed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternAfterSimConfirmed::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExternAfterSimConfirmed_descriptor_;
}

const ExternAfterSimConfirmed& ExternAfterSimConfirmed::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

ExternAfterSimConfirmed* ExternAfterSimConfirmed::default_instance_ = NULL;

ExternAfterSimConfirmed* ExternAfterSimConfirmed::New() const {
  return new ExternAfterSimConfirmed;
}

void ExternAfterSimConfirmed::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExternAfterSimConfirmed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ExternAfterSimConfirmed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExternAfterSimConfirmed::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExternAfterSimConfirmed::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternAfterSimConfirmed::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExternAfterSimConfirmed* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExternAfterSimConfirmed*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExternAfterSimConfirmed::MergeFrom(const ExternAfterSimConfirmed& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExternAfterSimConfirmed::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternAfterSimConfirmed::CopyFrom(const ExternAfterSimConfirmed& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternAfterSimConfirmed::IsInitialized() const {

  return true;
}

void ExternAfterSimConfirmed::Swap(ExternAfterSimConfirmed* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExternAfterSimConfirmed::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExternAfterSimConfirmed_descriptor_;
  metadata.reflection = ExternAfterSimConfirmed_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AgentsStuck::kAgentIdFieldNumber;
#endif  // !_MSC_VER

AgentsStuck::AgentsStuck()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AgentsStuck::InitAsDefaultInstance() {
}

AgentsStuck::AgentsStuck(const AgentsStuck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AgentsStuck::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AgentsStuck::~AgentsStuck() {
  SharedDtor();
}

void AgentsStuck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AgentsStuck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AgentsStuck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AgentsStuck_descriptor_;
}

const AgentsStuck& AgentsStuck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

AgentsStuck* AgentsStuck::default_instance_ = NULL;

AgentsStuck* AgentsStuck::New() const {
  return new AgentsStuck;
}

void AgentsStuck::Clear() {
  agentid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AgentsStuck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string agentId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_agentId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_agentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->agentid(this->agentid_size() - 1).data(),
            this->agentid(this->agentid_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_agentId;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AgentsStuck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string agentId = 1;
  for (int i = 0; i < this->agentid_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->agentid(i).data(), this->agentid(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->agentid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AgentsStuck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string agentId = 1;
  for (int i = 0; i < this->agentid_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->agentid(i).data(), this->agentid(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->agentid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AgentsStuck::ByteSize() const {
  int total_size = 0;

  // repeated string agentId = 1;
  total_size += 1 * this->agentid_size();
  for (int i = 0; i < this->agentid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->agentid(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AgentsStuck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AgentsStuck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AgentsStuck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AgentsStuck::MergeFrom(const AgentsStuck& from) {
  GOOGLE_CHECK_NE(&from, this);
  agentid_.MergeFrom(from.agentid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AgentsStuck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgentsStuck::CopyFrom(const AgentsStuck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentsStuck::IsInitialized() const {

  return true;
}

void AgentsStuck::Swap(AgentsStuck* other) {
  if (other != this) {
    agentid_.Swap(&other->agentid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AgentsStuck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AgentsStuck_descriptor_;
  metadata.reflection = AgentsStuck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

AgentsStuckConfirmed::AgentsStuckConfirmed()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AgentsStuckConfirmed::InitAsDefaultInstance() {
}

AgentsStuckConfirmed::AgentsStuckConfirmed(const AgentsStuckConfirmed& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AgentsStuckConfirmed::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AgentsStuckConfirmed::~AgentsStuckConfirmed() {
  SharedDtor();
}

void AgentsStuckConfirmed::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AgentsStuckConfirmed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AgentsStuckConfirmed::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AgentsStuckConfirmed_descriptor_;
}

const AgentsStuckConfirmed& AgentsStuckConfirmed::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MATSimInterface_2eproto();
  return *default_instance_;
}

AgentsStuckConfirmed* AgentsStuckConfirmed::default_instance_ = NULL;

AgentsStuckConfirmed* AgentsStuckConfirmed::New() const {
  return new AgentsStuckConfirmed;
}

void AgentsStuckConfirmed::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AgentsStuckConfirmed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AgentsStuckConfirmed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AgentsStuckConfirmed::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AgentsStuckConfirmed::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AgentsStuckConfirmed::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AgentsStuckConfirmed* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AgentsStuckConfirmed*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AgentsStuckConfirmed::MergeFrom(const AgentsStuckConfirmed& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AgentsStuckConfirmed::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgentsStuckConfirmed::CopyFrom(const AgentsStuckConfirmed& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentsStuckConfirmed::IsInitialized() const {

  return true;
}

void AgentsStuckConfirmed::Swap(AgentsStuckConfirmed* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AgentsStuckConfirmed::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AgentsStuckConfirmed_descriptor_;
  metadata.reflection = AgentsStuckConfirmed_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
