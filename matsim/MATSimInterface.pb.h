// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MATSimInterface.proto

#ifndef PROTOBUF_MATSimInterface_2eproto__INCLUDED
#define PROTOBUF_MATSimInterface_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace org {
namespace matsim {
namespace hybrid {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MATSimInterface_2eproto();
void protobuf_AssignDesc_MATSimInterface_2eproto();
void protobuf_ShutdownFile_MATSimInterface_2eproto();

class MATSim2ExternPutAgent;
class MATSim2ExternPutAgent_Agent;
class MATSim2ExternHasSpace;
class MATSim2ExternHasSpaceConfirmed;
class MATSim2ExternPutAgentConfirmed;
class Extern2MATSim;
class Extern2MATSim_Agent;
class Extern2MATSimConfirmed;
class ExternSimStepFinished;
class ExternSimStepFinishedReceived;
class ExternDoSimStep;
class ExternDoSimStepReceived;
class ExternOnPrepareSim;
class ExternOnPrepareSimConfirmed;
class ExternAfterSim;
class ExternAfterSimConfirmed;
class AgentsStuck;
class AgentsStuckConfirmed;

// ===================================================================

class MATSim2ExternPutAgent_Agent : public ::google::protobuf::Message {
 public:
  MATSim2ExternPutAgent_Agent();
  virtual ~MATSim2ExternPutAgent_Agent();

  MATSim2ExternPutAgent_Agent(const MATSim2ExternPutAgent_Agent& from);

  inline MATSim2ExternPutAgent_Agent& operator=(const MATSim2ExternPutAgent_Agent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MATSim2ExternPutAgent_Agent& default_instance();

  void Swap(MATSim2ExternPutAgent_Agent* other);

  // implements Message ----------------------------------------------

  inline MATSim2ExternPutAgent_Agent* New() const { return New(NULL); }

  MATSim2ExternPutAgent_Agent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MATSim2ExternPutAgent_Agent& from);
  void MergeFrom(const MATSim2ExternPutAgent_Agent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MATSim2ExternPutAgent_Agent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string enterNode = 2;
  bool has_enternode() const;
  void clear_enternode();
  static const int kEnterNodeFieldNumber = 2;
  const ::std::string& enternode() const;
  void set_enternode(const ::std::string& value);
  void set_enternode(const char* value);
  void set_enternode(const char* value, size_t size);
  ::std::string* mutable_enternode();
  ::std::string* release_enternode();
  void set_allocated_enternode(::std::string* enternode);

  // repeated string nodes = 3;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 3;
  const ::std::string& nodes(int index) const;
  ::std::string* mutable_nodes(int index);
  void set_nodes(int index, const ::std::string& value);
  void set_nodes(int index, const char* value);
  void set_nodes(int index, const char* value, size_t size);
  ::std::string* add_nodes();
  void add_nodes(const ::std::string& value);
  void add_nodes(const char* value);
  void add_nodes(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& nodes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_nodes();

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.MATSim2ExternPutAgent.Agent)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_enternode();
  inline void clear_has_enternode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr enternode_;
  ::google::protobuf::RepeatedPtrField< ::std::string> nodes_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static MATSim2ExternPutAgent_Agent* default_instance_;
};
// -------------------------------------------------------------------

class MATSim2ExternPutAgent : public ::google::protobuf::Message {
 public:
  MATSim2ExternPutAgent();
  virtual ~MATSim2ExternPutAgent();

  MATSim2ExternPutAgent(const MATSim2ExternPutAgent& from);

  inline MATSim2ExternPutAgent& operator=(const MATSim2ExternPutAgent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MATSim2ExternPutAgent& default_instance();

  void Swap(MATSim2ExternPutAgent* other);

  // implements Message ----------------------------------------------

  inline MATSim2ExternPutAgent* New() const { return New(NULL); }

  MATSim2ExternPutAgent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MATSim2ExternPutAgent& from);
  void MergeFrom(const MATSim2ExternPutAgent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MATSim2ExternPutAgent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MATSim2ExternPutAgent_Agent Agent;

  // accessors -------------------------------------------------------

  // optional .org.matsim.hybrid.MATSim2ExternPutAgent.Agent agent = 1;
  bool has_agent() const;
  void clear_agent();
  static const int kAgentFieldNumber = 1;
  const ::org::matsim::hybrid::MATSim2ExternPutAgent_Agent& agent() const;
  ::org::matsim::hybrid::MATSim2ExternPutAgent_Agent* mutable_agent();
  ::org::matsim::hybrid::MATSim2ExternPutAgent_Agent* release_agent();
  void set_allocated_agent(::org::matsim::hybrid::MATSim2ExternPutAgent_Agent* agent);

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.MATSim2ExternPutAgent)
 private:
  inline void set_has_agent();
  inline void clear_has_agent();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::org::matsim::hybrid::MATSim2ExternPutAgent_Agent* agent_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static MATSim2ExternPutAgent* default_instance_;
};
// -------------------------------------------------------------------

class MATSim2ExternHasSpace : public ::google::protobuf::Message {
 public:
  MATSim2ExternHasSpace();
  virtual ~MATSim2ExternHasSpace();

  MATSim2ExternHasSpace(const MATSim2ExternHasSpace& from);

  inline MATSim2ExternHasSpace& operator=(const MATSim2ExternHasSpace& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MATSim2ExternHasSpace& default_instance();

  void Swap(MATSim2ExternHasSpace* other);

  // implements Message ----------------------------------------------

  inline MATSim2ExternHasSpace* New() const { return New(NULL); }

  MATSim2ExternHasSpace* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MATSim2ExternHasSpace& from);
  void MergeFrom(const MATSim2ExternHasSpace& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MATSim2ExternHasSpace* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nodeId = 1;
  bool has_nodeid() const;
  void clear_nodeid();
  static const int kNodeIdFieldNumber = 1;
  const ::std::string& nodeid() const;
  void set_nodeid(const ::std::string& value);
  void set_nodeid(const char* value);
  void set_nodeid(const char* value, size_t size);
  ::std::string* mutable_nodeid();
  ::std::string* release_nodeid();
  void set_allocated_nodeid(::std::string* nodeid);

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.MATSim2ExternHasSpace)
 private:
  inline void set_has_nodeid();
  inline void clear_has_nodeid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nodeid_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static MATSim2ExternHasSpace* default_instance_;
};
// -------------------------------------------------------------------

class MATSim2ExternHasSpaceConfirmed : public ::google::protobuf::Message {
 public:
  MATSim2ExternHasSpaceConfirmed();
  virtual ~MATSim2ExternHasSpaceConfirmed();

  MATSim2ExternHasSpaceConfirmed(const MATSim2ExternHasSpaceConfirmed& from);

  inline MATSim2ExternHasSpaceConfirmed& operator=(const MATSim2ExternHasSpaceConfirmed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MATSim2ExternHasSpaceConfirmed& default_instance();

  void Swap(MATSim2ExternHasSpaceConfirmed* other);

  // implements Message ----------------------------------------------

  inline MATSim2ExternHasSpaceConfirmed* New() const { return New(NULL); }

  MATSim2ExternHasSpaceConfirmed* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MATSim2ExternHasSpaceConfirmed& from);
  void MergeFrom(const MATSim2ExternHasSpaceConfirmed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MATSim2ExternHasSpaceConfirmed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool hasSpace = 1;
  bool has_hasspace() const;
  void clear_hasspace();
  static const int kHasSpaceFieldNumber = 1;
  bool hasspace() const;
  void set_hasspace(bool value);

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.MATSim2ExternHasSpaceConfirmed)
 private:
  inline void set_has_hasspace();
  inline void clear_has_hasspace();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool hasspace_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static MATSim2ExternHasSpaceConfirmed* default_instance_;
};
// -------------------------------------------------------------------

class MATSim2ExternPutAgentConfirmed : public ::google::protobuf::Message {
 public:
  MATSim2ExternPutAgentConfirmed();
  virtual ~MATSim2ExternPutAgentConfirmed();

  MATSim2ExternPutAgentConfirmed(const MATSim2ExternPutAgentConfirmed& from);

  inline MATSim2ExternPutAgentConfirmed& operator=(const MATSim2ExternPutAgentConfirmed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MATSim2ExternPutAgentConfirmed& default_instance();

  void Swap(MATSim2ExternPutAgentConfirmed* other);

  // implements Message ----------------------------------------------

  inline MATSim2ExternPutAgentConfirmed* New() const { return New(NULL); }

  MATSim2ExternPutAgentConfirmed* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MATSim2ExternPutAgentConfirmed& from);
  void MergeFrom(const MATSim2ExternPutAgentConfirmed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MATSim2ExternPutAgentConfirmed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.MATSim2ExternPutAgentConfirmed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static MATSim2ExternPutAgentConfirmed* default_instance_;
};
// -------------------------------------------------------------------

class Extern2MATSim_Agent : public ::google::protobuf::Message {
 public:
  Extern2MATSim_Agent();
  virtual ~Extern2MATSim_Agent();

  Extern2MATSim_Agent(const Extern2MATSim_Agent& from);

  inline Extern2MATSim_Agent& operator=(const Extern2MATSim_Agent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Extern2MATSim_Agent& default_instance();

  void Swap(Extern2MATSim_Agent* other);

  // implements Message ----------------------------------------------

  inline Extern2MATSim_Agent* New() const { return New(NULL); }

  Extern2MATSim_Agent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Extern2MATSim_Agent& from);
  void MergeFrom(const Extern2MATSim_Agent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Extern2MATSim_Agent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string leaveNode = 2;
  bool has_leavenode() const;
  void clear_leavenode();
  static const int kLeaveNodeFieldNumber = 2;
  const ::std::string& leavenode() const;
  void set_leavenode(const ::std::string& value);
  void set_leavenode(const char* value);
  void set_leavenode(const char* value, size_t size);
  ::std::string* mutable_leavenode();
  ::std::string* release_leavenode();
  void set_allocated_leavenode(::std::string* leavenode);

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.Extern2MATSim.Agent)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_leavenode();
  inline void clear_has_leavenode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr leavenode_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static Extern2MATSim_Agent* default_instance_;
};
// -------------------------------------------------------------------

class Extern2MATSim : public ::google::protobuf::Message {
 public:
  Extern2MATSim();
  virtual ~Extern2MATSim();

  Extern2MATSim(const Extern2MATSim& from);

  inline Extern2MATSim& operator=(const Extern2MATSim& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Extern2MATSim& default_instance();

  void Swap(Extern2MATSim* other);

  // implements Message ----------------------------------------------

  inline Extern2MATSim* New() const { return New(NULL); }

  Extern2MATSim* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Extern2MATSim& from);
  void MergeFrom(const Extern2MATSim& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Extern2MATSim* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Extern2MATSim_Agent Agent;

  // accessors -------------------------------------------------------

  // optional .org.matsim.hybrid.Extern2MATSim.Agent agent = 1;
  bool has_agent() const;
  void clear_agent();
  static const int kAgentFieldNumber = 1;
  const ::org::matsim::hybrid::Extern2MATSim_Agent& agent() const;
  ::org::matsim::hybrid::Extern2MATSim_Agent* mutable_agent();
  ::org::matsim::hybrid::Extern2MATSim_Agent* release_agent();
  void set_allocated_agent(::org::matsim::hybrid::Extern2MATSim_Agent* agent);

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.Extern2MATSim)
 private:
  inline void set_has_agent();
  inline void clear_has_agent();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::org::matsim::hybrid::Extern2MATSim_Agent* agent_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static Extern2MATSim* default_instance_;
};
// -------------------------------------------------------------------

class Extern2MATSimConfirmed : public ::google::protobuf::Message {
 public:
  Extern2MATSimConfirmed();
  virtual ~Extern2MATSimConfirmed();

  Extern2MATSimConfirmed(const Extern2MATSimConfirmed& from);

  inline Extern2MATSimConfirmed& operator=(const Extern2MATSimConfirmed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Extern2MATSimConfirmed& default_instance();

  void Swap(Extern2MATSimConfirmed* other);

  // implements Message ----------------------------------------------

  inline Extern2MATSimConfirmed* New() const { return New(NULL); }

  Extern2MATSimConfirmed* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Extern2MATSimConfirmed& from);
  void MergeFrom(const Extern2MATSimConfirmed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Extern2MATSimConfirmed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool accepted = 1;
  bool has_accepted() const;
  void clear_accepted();
  static const int kAcceptedFieldNumber = 1;
  bool accepted() const;
  void set_accepted(bool value);

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.Extern2MATSimConfirmed)
 private:
  inline void set_has_accepted();
  inline void clear_has_accepted();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool accepted_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static Extern2MATSimConfirmed* default_instance_;
};
// -------------------------------------------------------------------

class ExternSimStepFinished : public ::google::protobuf::Message {
 public:
  ExternSimStepFinished();
  virtual ~ExternSimStepFinished();

  ExternSimStepFinished(const ExternSimStepFinished& from);

  inline ExternSimStepFinished& operator=(const ExternSimStepFinished& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExternSimStepFinished& default_instance();

  void Swap(ExternSimStepFinished* other);

  // implements Message ----------------------------------------------

  inline ExternSimStepFinished* New() const { return New(NULL); }

  ExternSimStepFinished* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExternSimStepFinished& from);
  void MergeFrom(const ExternSimStepFinished& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExternSimStepFinished* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double time = 1;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  double time() const;
  void set_time(double value);

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.ExternSimStepFinished)
 private:
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double time_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static ExternSimStepFinished* default_instance_;
};
// -------------------------------------------------------------------

class ExternSimStepFinishedReceived : public ::google::protobuf::Message {
 public:
  ExternSimStepFinishedReceived();
  virtual ~ExternSimStepFinishedReceived();

  ExternSimStepFinishedReceived(const ExternSimStepFinishedReceived& from);

  inline ExternSimStepFinishedReceived& operator=(const ExternSimStepFinishedReceived& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExternSimStepFinishedReceived& default_instance();

  void Swap(ExternSimStepFinishedReceived* other);

  // implements Message ----------------------------------------------

  inline ExternSimStepFinishedReceived* New() const { return New(NULL); }

  ExternSimStepFinishedReceived* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExternSimStepFinishedReceived& from);
  void MergeFrom(const ExternSimStepFinishedReceived& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExternSimStepFinishedReceived* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.ExternSimStepFinishedReceived)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static ExternSimStepFinishedReceived* default_instance_;
};
// -------------------------------------------------------------------

class ExternDoSimStep : public ::google::protobuf::Message {
 public:
  ExternDoSimStep();
  virtual ~ExternDoSimStep();

  ExternDoSimStep(const ExternDoSimStep& from);

  inline ExternDoSimStep& operator=(const ExternDoSimStep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExternDoSimStep& default_instance();

  void Swap(ExternDoSimStep* other);

  // implements Message ----------------------------------------------

  inline ExternDoSimStep* New() const { return New(NULL); }

  ExternDoSimStep* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExternDoSimStep& from);
  void MergeFrom(const ExternDoSimStep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExternDoSimStep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double fromTime = 1;
  bool has_fromtime() const;
  void clear_fromtime();
  static const int kFromTimeFieldNumber = 1;
  double fromtime() const;
  void set_fromtime(double value);

  // optional double toTime = 2;
  bool has_totime() const;
  void clear_totime();
  static const int kToTimeFieldNumber = 2;
  double totime() const;
  void set_totime(double value);

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.ExternDoSimStep)
 private:
  inline void set_has_fromtime();
  inline void clear_has_fromtime();
  inline void set_has_totime();
  inline void clear_has_totime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double fromtime_;
  double totime_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static ExternDoSimStep* default_instance_;
};
// -------------------------------------------------------------------

class ExternDoSimStepReceived : public ::google::protobuf::Message {
 public:
  ExternDoSimStepReceived();
  virtual ~ExternDoSimStepReceived();

  ExternDoSimStepReceived(const ExternDoSimStepReceived& from);

  inline ExternDoSimStepReceived& operator=(const ExternDoSimStepReceived& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExternDoSimStepReceived& default_instance();

  void Swap(ExternDoSimStepReceived* other);

  // implements Message ----------------------------------------------

  inline ExternDoSimStepReceived* New() const { return New(NULL); }

  ExternDoSimStepReceived* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExternDoSimStepReceived& from);
  void MergeFrom(const ExternDoSimStepReceived& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExternDoSimStepReceived* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.ExternDoSimStepReceived)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static ExternDoSimStepReceived* default_instance_;
};
// -------------------------------------------------------------------

class ExternOnPrepareSim : public ::google::protobuf::Message {
 public:
  ExternOnPrepareSim();
  virtual ~ExternOnPrepareSim();

  ExternOnPrepareSim(const ExternOnPrepareSim& from);

  inline ExternOnPrepareSim& operator=(const ExternOnPrepareSim& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExternOnPrepareSim& default_instance();

  void Swap(ExternOnPrepareSim* other);

  // implements Message ----------------------------------------------

  inline ExternOnPrepareSim* New() const { return New(NULL); }

  ExternOnPrepareSim* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExternOnPrepareSim& from);
  void MergeFrom(const ExternOnPrepareSim& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExternOnPrepareSim* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.ExternOnPrepareSim)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static ExternOnPrepareSim* default_instance_;
};
// -------------------------------------------------------------------

class ExternOnPrepareSimConfirmed : public ::google::protobuf::Message {
 public:
  ExternOnPrepareSimConfirmed();
  virtual ~ExternOnPrepareSimConfirmed();

  ExternOnPrepareSimConfirmed(const ExternOnPrepareSimConfirmed& from);

  inline ExternOnPrepareSimConfirmed& operator=(const ExternOnPrepareSimConfirmed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExternOnPrepareSimConfirmed& default_instance();

  void Swap(ExternOnPrepareSimConfirmed* other);

  // implements Message ----------------------------------------------

  inline ExternOnPrepareSimConfirmed* New() const { return New(NULL); }

  ExternOnPrepareSimConfirmed* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExternOnPrepareSimConfirmed& from);
  void MergeFrom(const ExternOnPrepareSimConfirmed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExternOnPrepareSimConfirmed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.ExternOnPrepareSimConfirmed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static ExternOnPrepareSimConfirmed* default_instance_;
};
// -------------------------------------------------------------------

class ExternAfterSim : public ::google::protobuf::Message {
 public:
  ExternAfterSim();
  virtual ~ExternAfterSim();

  ExternAfterSim(const ExternAfterSim& from);

  inline ExternAfterSim& operator=(const ExternAfterSim& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExternAfterSim& default_instance();

  void Swap(ExternAfterSim* other);

  // implements Message ----------------------------------------------

  inline ExternAfterSim* New() const { return New(NULL); }

  ExternAfterSim* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExternAfterSim& from);
  void MergeFrom(const ExternAfterSim& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExternAfterSim* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.ExternAfterSim)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static ExternAfterSim* default_instance_;
};
// -------------------------------------------------------------------

class ExternAfterSimConfirmed : public ::google::protobuf::Message {
 public:
  ExternAfterSimConfirmed();
  virtual ~ExternAfterSimConfirmed();

  ExternAfterSimConfirmed(const ExternAfterSimConfirmed& from);

  inline ExternAfterSimConfirmed& operator=(const ExternAfterSimConfirmed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExternAfterSimConfirmed& default_instance();

  void Swap(ExternAfterSimConfirmed* other);

  // implements Message ----------------------------------------------

  inline ExternAfterSimConfirmed* New() const { return New(NULL); }

  ExternAfterSimConfirmed* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExternAfterSimConfirmed& from);
  void MergeFrom(const ExternAfterSimConfirmed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExternAfterSimConfirmed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.ExternAfterSimConfirmed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static ExternAfterSimConfirmed* default_instance_;
};
// -------------------------------------------------------------------

class AgentsStuck : public ::google::protobuf::Message {
 public:
  AgentsStuck();
  virtual ~AgentsStuck();

  AgentsStuck(const AgentsStuck& from);

  inline AgentsStuck& operator=(const AgentsStuck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AgentsStuck& default_instance();

  void Swap(AgentsStuck* other);

  // implements Message ----------------------------------------------

  inline AgentsStuck* New() const { return New(NULL); }

  AgentsStuck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AgentsStuck& from);
  void MergeFrom(const AgentsStuck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AgentsStuck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string agentId = 1;
  int agentid_size() const;
  void clear_agentid();
  static const int kAgentIdFieldNumber = 1;
  const ::std::string& agentid(int index) const;
  ::std::string* mutable_agentid(int index);
  void set_agentid(int index, const ::std::string& value);
  void set_agentid(int index, const char* value);
  void set_agentid(int index, const char* value, size_t size);
  ::std::string* add_agentid();
  void add_agentid(const ::std::string& value);
  void add_agentid(const char* value);
  void add_agentid(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& agentid() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_agentid();

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.AgentsStuck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> agentid_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static AgentsStuck* default_instance_;
};
// -------------------------------------------------------------------

class AgentsStuckConfirmed : public ::google::protobuf::Message {
 public:
  AgentsStuckConfirmed();
  virtual ~AgentsStuckConfirmed();

  AgentsStuckConfirmed(const AgentsStuckConfirmed& from);

  inline AgentsStuckConfirmed& operator=(const AgentsStuckConfirmed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AgentsStuckConfirmed& default_instance();

  void Swap(AgentsStuckConfirmed* other);

  // implements Message ----------------------------------------------

  inline AgentsStuckConfirmed* New() const { return New(NULL); }

  AgentsStuckConfirmed* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AgentsStuckConfirmed& from);
  void MergeFrom(const AgentsStuckConfirmed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AgentsStuckConfirmed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:org.matsim.hybrid.AgentsStuckConfirmed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MATSimInterface_2eproto();
  friend void protobuf_AssignDesc_MATSimInterface_2eproto();
  friend void protobuf_ShutdownFile_MATSimInterface_2eproto();

  void InitAsDefaultInstance();
  static AgentsStuckConfirmed* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MATSim2ExternPutAgent_Agent

// optional string id = 1;
inline bool MATSim2ExternPutAgent_Agent::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MATSim2ExternPutAgent_Agent::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MATSim2ExternPutAgent_Agent::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MATSim2ExternPutAgent_Agent::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& MATSim2ExternPutAgent_Agent::id() const {
  // @@protoc_insertion_point(field_get:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MATSim2ExternPutAgent_Agent::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.id)
}
inline void MATSim2ExternPutAgent_Agent::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.id)
}
inline void MATSim2ExternPutAgent_Agent::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.id)
}
inline ::std::string* MATSim2ExternPutAgent_Agent::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MATSim2ExternPutAgent_Agent::release_id() {
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MATSim2ExternPutAgent_Agent::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.id)
}

// optional string enterNode = 2;
inline bool MATSim2ExternPutAgent_Agent::has_enternode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MATSim2ExternPutAgent_Agent::set_has_enternode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MATSim2ExternPutAgent_Agent::clear_has_enternode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MATSim2ExternPutAgent_Agent::clear_enternode() {
  enternode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_enternode();
}
inline const ::std::string& MATSim2ExternPutAgent_Agent::enternode() const {
  // @@protoc_insertion_point(field_get:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.enterNode)
  return enternode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MATSim2ExternPutAgent_Agent::set_enternode(const ::std::string& value) {
  set_has_enternode();
  enternode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.enterNode)
}
inline void MATSim2ExternPutAgent_Agent::set_enternode(const char* value) {
  set_has_enternode();
  enternode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.enterNode)
}
inline void MATSim2ExternPutAgent_Agent::set_enternode(const char* value, size_t size) {
  set_has_enternode();
  enternode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.enterNode)
}
inline ::std::string* MATSim2ExternPutAgent_Agent::mutable_enternode() {
  set_has_enternode();
  // @@protoc_insertion_point(field_mutable:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.enterNode)
  return enternode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MATSim2ExternPutAgent_Agent::release_enternode() {
  clear_has_enternode();
  return enternode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MATSim2ExternPutAgent_Agent::set_allocated_enternode(::std::string* enternode) {
  if (enternode != NULL) {
    set_has_enternode();
  } else {
    clear_has_enternode();
  }
  enternode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), enternode);
  // @@protoc_insertion_point(field_set_allocated:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.enterNode)
}

// repeated string nodes = 3;
inline int MATSim2ExternPutAgent_Agent::nodes_size() const {
  return nodes_.size();
}
inline void MATSim2ExternPutAgent_Agent::clear_nodes() {
  nodes_.Clear();
}
inline const ::std::string& MATSim2ExternPutAgent_Agent::nodes(int index) const {
  // @@protoc_insertion_point(field_get:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.nodes)
  return nodes_.Get(index);
}
inline ::std::string* MATSim2ExternPutAgent_Agent::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.nodes)
  return nodes_.Mutable(index);
}
inline void MATSim2ExternPutAgent_Agent::set_nodes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.nodes)
  nodes_.Mutable(index)->assign(value);
}
inline void MATSim2ExternPutAgent_Agent::set_nodes(int index, const char* value) {
  nodes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.nodes)
}
inline void MATSim2ExternPutAgent_Agent::set_nodes(int index, const char* value, size_t size) {
  nodes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.nodes)
}
inline ::std::string* MATSim2ExternPutAgent_Agent::add_nodes() {
  return nodes_.Add();
}
inline void MATSim2ExternPutAgent_Agent::add_nodes(const ::std::string& value) {
  nodes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.nodes)
}
inline void MATSim2ExternPutAgent_Agent::add_nodes(const char* value) {
  nodes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.nodes)
}
inline void MATSim2ExternPutAgent_Agent::add_nodes(const char* value, size_t size) {
  nodes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.nodes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MATSim2ExternPutAgent_Agent::nodes() const {
  // @@protoc_insertion_point(field_list:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.nodes)
  return nodes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MATSim2ExternPutAgent_Agent::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:org.matsim.hybrid.MATSim2ExternPutAgent.Agent.nodes)
  return &nodes_;
}

// -------------------------------------------------------------------

// MATSim2ExternPutAgent

// optional .org.matsim.hybrid.MATSim2ExternPutAgent.Agent agent = 1;
inline bool MATSim2ExternPutAgent::has_agent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MATSim2ExternPutAgent::set_has_agent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MATSim2ExternPutAgent::clear_has_agent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MATSim2ExternPutAgent::clear_agent() {
  if (agent_ != NULL) agent_->::org::matsim::hybrid::MATSim2ExternPutAgent_Agent::Clear();
  clear_has_agent();
}
inline const ::org::matsim::hybrid::MATSim2ExternPutAgent_Agent& MATSim2ExternPutAgent::agent() const {
  // @@protoc_insertion_point(field_get:org.matsim.hybrid.MATSim2ExternPutAgent.agent)
  return agent_ != NULL ? *agent_ : *default_instance_->agent_;
}
inline ::org::matsim::hybrid::MATSim2ExternPutAgent_Agent* MATSim2ExternPutAgent::mutable_agent() {
  set_has_agent();
  if (agent_ == NULL) {
    agent_ = new ::org::matsim::hybrid::MATSim2ExternPutAgent_Agent;
  }
  // @@protoc_insertion_point(field_mutable:org.matsim.hybrid.MATSim2ExternPutAgent.agent)
  return agent_;
}
inline ::org::matsim::hybrid::MATSim2ExternPutAgent_Agent* MATSim2ExternPutAgent::release_agent() {
  clear_has_agent();
  ::org::matsim::hybrid::MATSim2ExternPutAgent_Agent* temp = agent_;
  agent_ = NULL;
  return temp;
}
inline void MATSim2ExternPutAgent::set_allocated_agent(::org::matsim::hybrid::MATSim2ExternPutAgent_Agent* agent) {
  delete agent_;
  agent_ = agent;
  if (agent) {
    set_has_agent();
  } else {
    clear_has_agent();
  }
  // @@protoc_insertion_point(field_set_allocated:org.matsim.hybrid.MATSim2ExternPutAgent.agent)
}

// -------------------------------------------------------------------

// MATSim2ExternHasSpace

// optional string nodeId = 1;
inline bool MATSim2ExternHasSpace::has_nodeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MATSim2ExternHasSpace::set_has_nodeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MATSim2ExternHasSpace::clear_has_nodeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MATSim2ExternHasSpace::clear_nodeid() {
  nodeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nodeid();
}
inline const ::std::string& MATSim2ExternHasSpace::nodeid() const {
  // @@protoc_insertion_point(field_get:org.matsim.hybrid.MATSim2ExternHasSpace.nodeId)
  return nodeid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MATSim2ExternHasSpace::set_nodeid(const ::std::string& value) {
  set_has_nodeid();
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.matsim.hybrid.MATSim2ExternHasSpace.nodeId)
}
inline void MATSim2ExternHasSpace::set_nodeid(const char* value) {
  set_has_nodeid();
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.matsim.hybrid.MATSim2ExternHasSpace.nodeId)
}
inline void MATSim2ExternHasSpace::set_nodeid(const char* value, size_t size) {
  set_has_nodeid();
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.matsim.hybrid.MATSim2ExternHasSpace.nodeId)
}
inline ::std::string* MATSim2ExternHasSpace::mutable_nodeid() {
  set_has_nodeid();
  // @@protoc_insertion_point(field_mutable:org.matsim.hybrid.MATSim2ExternHasSpace.nodeId)
  return nodeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MATSim2ExternHasSpace::release_nodeid() {
  clear_has_nodeid();
  return nodeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MATSim2ExternHasSpace::set_allocated_nodeid(::std::string* nodeid) {
  if (nodeid != NULL) {
    set_has_nodeid();
  } else {
    clear_has_nodeid();
  }
  nodeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nodeid);
  // @@protoc_insertion_point(field_set_allocated:org.matsim.hybrid.MATSim2ExternHasSpace.nodeId)
}

// -------------------------------------------------------------------

// MATSim2ExternHasSpaceConfirmed

// optional bool hasSpace = 1;
inline bool MATSim2ExternHasSpaceConfirmed::has_hasspace() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MATSim2ExternHasSpaceConfirmed::set_has_hasspace() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MATSim2ExternHasSpaceConfirmed::clear_has_hasspace() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MATSim2ExternHasSpaceConfirmed::clear_hasspace() {
  hasspace_ = false;
  clear_has_hasspace();
}
inline bool MATSim2ExternHasSpaceConfirmed::hasspace() const {
  // @@protoc_insertion_point(field_get:org.matsim.hybrid.MATSim2ExternHasSpaceConfirmed.hasSpace)
  return hasspace_;
}
inline void MATSim2ExternHasSpaceConfirmed::set_hasspace(bool value) {
  set_has_hasspace();
  hasspace_ = value;
  // @@protoc_insertion_point(field_set:org.matsim.hybrid.MATSim2ExternHasSpaceConfirmed.hasSpace)
}

// -------------------------------------------------------------------

// MATSim2ExternPutAgentConfirmed

// -------------------------------------------------------------------

// Extern2MATSim_Agent

// optional string id = 1;
inline bool Extern2MATSim_Agent::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Extern2MATSim_Agent::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Extern2MATSim_Agent::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Extern2MATSim_Agent::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& Extern2MATSim_Agent::id() const {
  // @@protoc_insertion_point(field_get:org.matsim.hybrid.Extern2MATSim.Agent.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Extern2MATSim_Agent::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.matsim.hybrid.Extern2MATSim.Agent.id)
}
inline void Extern2MATSim_Agent::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.matsim.hybrid.Extern2MATSim.Agent.id)
}
inline void Extern2MATSim_Agent::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.matsim.hybrid.Extern2MATSim.Agent.id)
}
inline ::std::string* Extern2MATSim_Agent::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:org.matsim.hybrid.Extern2MATSim.Agent.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Extern2MATSim_Agent::release_id() {
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Extern2MATSim_Agent::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:org.matsim.hybrid.Extern2MATSim.Agent.id)
}

// optional string leaveNode = 2;
inline bool Extern2MATSim_Agent::has_leavenode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Extern2MATSim_Agent::set_has_leavenode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Extern2MATSim_Agent::clear_has_leavenode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Extern2MATSim_Agent::clear_leavenode() {
  leavenode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_leavenode();
}
inline const ::std::string& Extern2MATSim_Agent::leavenode() const {
  // @@protoc_insertion_point(field_get:org.matsim.hybrid.Extern2MATSim.Agent.leaveNode)
  return leavenode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Extern2MATSim_Agent::set_leavenode(const ::std::string& value) {
  set_has_leavenode();
  leavenode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.matsim.hybrid.Extern2MATSim.Agent.leaveNode)
}
inline void Extern2MATSim_Agent::set_leavenode(const char* value) {
  set_has_leavenode();
  leavenode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.matsim.hybrid.Extern2MATSim.Agent.leaveNode)
}
inline void Extern2MATSim_Agent::set_leavenode(const char* value, size_t size) {
  set_has_leavenode();
  leavenode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.matsim.hybrid.Extern2MATSim.Agent.leaveNode)
}
inline ::std::string* Extern2MATSim_Agent::mutable_leavenode() {
  set_has_leavenode();
  // @@protoc_insertion_point(field_mutable:org.matsim.hybrid.Extern2MATSim.Agent.leaveNode)
  return leavenode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Extern2MATSim_Agent::release_leavenode() {
  clear_has_leavenode();
  return leavenode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Extern2MATSim_Agent::set_allocated_leavenode(::std::string* leavenode) {
  if (leavenode != NULL) {
    set_has_leavenode();
  } else {
    clear_has_leavenode();
  }
  leavenode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), leavenode);
  // @@protoc_insertion_point(field_set_allocated:org.matsim.hybrid.Extern2MATSim.Agent.leaveNode)
}

// -------------------------------------------------------------------

// Extern2MATSim

// optional .org.matsim.hybrid.Extern2MATSim.Agent agent = 1;
inline bool Extern2MATSim::has_agent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Extern2MATSim::set_has_agent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Extern2MATSim::clear_has_agent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Extern2MATSim::clear_agent() {
  if (agent_ != NULL) agent_->::org::matsim::hybrid::Extern2MATSim_Agent::Clear();
  clear_has_agent();
}
inline const ::org::matsim::hybrid::Extern2MATSim_Agent& Extern2MATSim::agent() const {
  // @@protoc_insertion_point(field_get:org.matsim.hybrid.Extern2MATSim.agent)
  return agent_ != NULL ? *agent_ : *default_instance_->agent_;
}
inline ::org::matsim::hybrid::Extern2MATSim_Agent* Extern2MATSim::mutable_agent() {
  set_has_agent();
  if (agent_ == NULL) {
    agent_ = new ::org::matsim::hybrid::Extern2MATSim_Agent;
  }
  // @@protoc_insertion_point(field_mutable:org.matsim.hybrid.Extern2MATSim.agent)
  return agent_;
}
inline ::org::matsim::hybrid::Extern2MATSim_Agent* Extern2MATSim::release_agent() {
  clear_has_agent();
  ::org::matsim::hybrid::Extern2MATSim_Agent* temp = agent_;
  agent_ = NULL;
  return temp;
}
inline void Extern2MATSim::set_allocated_agent(::org::matsim::hybrid::Extern2MATSim_Agent* agent) {
  delete agent_;
  agent_ = agent;
  if (agent) {
    set_has_agent();
  } else {
    clear_has_agent();
  }
  // @@protoc_insertion_point(field_set_allocated:org.matsim.hybrid.Extern2MATSim.agent)
}

// -------------------------------------------------------------------

// Extern2MATSimConfirmed

// optional bool accepted = 1;
inline bool Extern2MATSimConfirmed::has_accepted() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Extern2MATSimConfirmed::set_has_accepted() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Extern2MATSimConfirmed::clear_has_accepted() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Extern2MATSimConfirmed::clear_accepted() {
  accepted_ = false;
  clear_has_accepted();
}
inline bool Extern2MATSimConfirmed::accepted() const {
  // @@protoc_insertion_point(field_get:org.matsim.hybrid.Extern2MATSimConfirmed.accepted)
  return accepted_;
}
inline void Extern2MATSimConfirmed::set_accepted(bool value) {
  set_has_accepted();
  accepted_ = value;
  // @@protoc_insertion_point(field_set:org.matsim.hybrid.Extern2MATSimConfirmed.accepted)
}

// -------------------------------------------------------------------

// ExternSimStepFinished

// optional double time = 1;
inline bool ExternSimStepFinished::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExternSimStepFinished::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExternSimStepFinished::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExternSimStepFinished::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline double ExternSimStepFinished::time() const {
  // @@protoc_insertion_point(field_get:org.matsim.hybrid.ExternSimStepFinished.time)
  return time_;
}
inline void ExternSimStepFinished::set_time(double value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:org.matsim.hybrid.ExternSimStepFinished.time)
}

// -------------------------------------------------------------------

// ExternSimStepFinishedReceived

// -------------------------------------------------------------------

// ExternDoSimStep

// optional double fromTime = 1;
inline bool ExternDoSimStep::has_fromtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExternDoSimStep::set_has_fromtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExternDoSimStep::clear_has_fromtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExternDoSimStep::clear_fromtime() {
  fromtime_ = 0;
  clear_has_fromtime();
}
inline double ExternDoSimStep::fromtime() const {
  // @@protoc_insertion_point(field_get:org.matsim.hybrid.ExternDoSimStep.fromTime)
  return fromtime_;
}
inline void ExternDoSimStep::set_fromtime(double value) {
  set_has_fromtime();
  fromtime_ = value;
  // @@protoc_insertion_point(field_set:org.matsim.hybrid.ExternDoSimStep.fromTime)
}

// optional double toTime = 2;
inline bool ExternDoSimStep::has_totime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExternDoSimStep::set_has_totime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExternDoSimStep::clear_has_totime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExternDoSimStep::clear_totime() {
  totime_ = 0;
  clear_has_totime();
}
inline double ExternDoSimStep::totime() const {
  // @@protoc_insertion_point(field_get:org.matsim.hybrid.ExternDoSimStep.toTime)
  return totime_;
}
inline void ExternDoSimStep::set_totime(double value) {
  set_has_totime();
  totime_ = value;
  // @@protoc_insertion_point(field_set:org.matsim.hybrid.ExternDoSimStep.toTime)
}

// -------------------------------------------------------------------

// ExternDoSimStepReceived

// -------------------------------------------------------------------

// ExternOnPrepareSim

// -------------------------------------------------------------------

// ExternOnPrepareSimConfirmed

// -------------------------------------------------------------------

// ExternAfterSim

// -------------------------------------------------------------------

// ExternAfterSimConfirmed

// -------------------------------------------------------------------

// AgentsStuck

// repeated string agentId = 1;
inline int AgentsStuck::agentid_size() const {
  return agentid_.size();
}
inline void AgentsStuck::clear_agentid() {
  agentid_.Clear();
}
inline const ::std::string& AgentsStuck::agentid(int index) const {
  // @@protoc_insertion_point(field_get:org.matsim.hybrid.AgentsStuck.agentId)
  return agentid_.Get(index);
}
inline ::std::string* AgentsStuck::mutable_agentid(int index) {
  // @@protoc_insertion_point(field_mutable:org.matsim.hybrid.AgentsStuck.agentId)
  return agentid_.Mutable(index);
}
inline void AgentsStuck::set_agentid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:org.matsim.hybrid.AgentsStuck.agentId)
  agentid_.Mutable(index)->assign(value);
}
inline void AgentsStuck::set_agentid(int index, const char* value) {
  agentid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:org.matsim.hybrid.AgentsStuck.agentId)
}
inline void AgentsStuck::set_agentid(int index, const char* value, size_t size) {
  agentid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:org.matsim.hybrid.AgentsStuck.agentId)
}
inline ::std::string* AgentsStuck::add_agentid() {
  return agentid_.Add();
}
inline void AgentsStuck::add_agentid(const ::std::string& value) {
  agentid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:org.matsim.hybrid.AgentsStuck.agentId)
}
inline void AgentsStuck::add_agentid(const char* value) {
  agentid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:org.matsim.hybrid.AgentsStuck.agentId)
}
inline void AgentsStuck::add_agentid(const char* value, size_t size) {
  agentid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:org.matsim.hybrid.AgentsStuck.agentId)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AgentsStuck::agentid() const {
  // @@protoc_insertion_point(field_list:org.matsim.hybrid.AgentsStuck.agentId)
  return agentid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AgentsStuck::mutable_agentid() {
  // @@protoc_insertion_point(field_mutable_list:org.matsim.hybrid.AgentsStuck.agentId)
  return &agentid_;
}

// -------------------------------------------------------------------

// AgentsStuckConfirmed

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace hybrid
}  // namespace matsim
}  // namespace org

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MATSimInterface_2eproto__INCLUDED
