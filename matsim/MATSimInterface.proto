syntax = "proto3";
//option java_generic_services = true;
//option cc_generic_services = true;
option java_outer_classname="ProtoMATSimInterface";
option java_package = "org.matsim.hybrid";

package org.matsim.hybrid;
//for compilation
// protoc  --grpc_out=. --plugin=protoc-gen-grpc=`which grpc_cpp_plugin` MATSimInterface.proto
// protoc  --cpp_out=.  MATSimInterface.proto
// protoc -I ../../protos/ --cpp_out=. ../../protos/helloworld.proto

message MATSim2ExternPutAgent {
	message Agent {
		optional string id = 1;
		optional string enterNode = 2;
		repeated string nodes = 3;
	}

	optional Agent agent = 1;
}

message MATSim2ExternHasSpace {
	optional string nodeId = 1;
}
message MATSim2ExternHasSpaceConfirmed {
	optional bool hasSpace = 1;
}

message MATSim2ExternPutAgentConfirmed {
}

message Extern2MATSim {
	message Agent {
		optional string id = 1;
		optional string leaveNode = 2;
	}

	optional Agent agent = 1;
}

message Extern2MATSimTrajectories {
     message Agent {
          optional int32 id = 1;
          optional double x = 2;
          optional double y = 3;
          optional double z = 4;
          optional int32 color = 5;
          optional double angle = 6;
     }

     optional double time = 1;
     repeated Agent agent = 2;
}

message MATSim2ExternTrajectoriesReceived {
}

message Extern2MATSimConfirmed {
	optional bool accepted = 1;
}

message ExternSimStepFinished {
	optional double time = 1;
}
message ExternSimStepFinishedReceived {
}

message ExternDoSimStep {
	optional double fromTime = 1;
	optional double toTime = 2;
}

message ExternDoSimStepReceived {

}

message ExternOnPrepareSim {

}

message ExternOnPrepareSimConfirmed {

}
message ExternAfterSim {

}

message ExternAfterSimConfirmed {

}

message AgentsStuck {
	repeated string agentId = 1;
}

message AgentsStuckConfirmed{

}

message ExternalConnect {
     optional string host =1;
     optional int32 port=2;
}

message ExternalConnectConfirmed {

}

message MaximumNumberOfAgents {
     optional int32 number = 1;
}

message MaximumNumberOfAgentsConfirmed {

}

service MATSimInterfaceService {
     // Send JuPedSim connection parameter
     rpc reqExternalConnect(ExternalConnect) returns (ExternalConnectConfirmed);
     // Sending Agents to MATsim
	rpc reqExtern2MATSim(Extern2MATSim) returns (Extern2MATSimConfirmed);
	// ?
	rpc reqAgentStuck(AgentsStuck) returns (AgentsStuckConfirmed);
	// Notifying Matsim about the end of the simulation
	rpc reqExternSimStepFinished(ExternSimStepFinished) returns (ExternSimStepFinishedReceived);
	// request the maximal number of agents
	rpc reqMaximumNumberOfAgents(MaximumNumberOfAgentsConfirmed) returns (MaximumNumberOfAgents);
	// sent the trajectories
	rpc reqSendTrajectories(Extern2MATSimTrajectories) returns (MATSim2ExternTrajectoriesReceived);
}

service ExternInterfaceService {
     // Checking if there is space on JuPedSim
	rpc reqMATSim2ExternHasSpace(MATSim2ExternHasSpace) returns (MATSim2ExternHasSpaceConfirmed);
	// Incoming Agent from MATsim
	rpc reqMATSim2ExternPutAgent(MATSim2ExternPutAgent) returns (MATSim2ExternPutAgentConfirmed);
	// Order to perform a simulation step
	rpc reqExternDoSimStep(ExternDoSimStep) returns (ExternDoSimStepReceived);
	// Tells JuPedSim to get ready for a simulation
	rpc reqExternOnPrepareSim(ExternOnPrepareSim) returns (ExternOnPrepareSimConfirmed);
	// Tells JuPedSim to shutdown
	rpc reqExternAfterSim(ExternAfterSim) returns (ExternAfterSimConfirmed);
}

