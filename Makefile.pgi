#MCC = g++ -std=c++11
MCC = pgc++ --c++11 -Minform=inform -mp
#CFLAGS= --c++11 -Wall -ansi



SOURCES=main.cpp   Simulation.cpp   general/ArgumentParser.cpp  tinyxml/tinystr.cpp \
  tinyxml/tinyxml.cpp  tinyxml/tinyxmlerror.cpp  tinyxml/tinyxmlparser.cpp  \
  geometry/Building.cpp  geometry/Line.cpp  geometry/Point.cpp  \
  geometry/Transition.cpp  geometry/Hline.cpp  geometry/Obstacle.cpp  \
  geometry/SubRoom.cpp  geometry/Crossing.cpp  geometry/NavLine.cpp  \
  geometry/Room.cpp  geometry/Wall.cpp  geometry/Goal.cpp  \
  IO/IODispatcher.cpp  IO/OutputHandler.cpp  IO/TraVisToClient.cpp  \
  math/ForceModel.cpp  math/Mathematics.cpp  math/ODESolver.cpp  \
  math/GCFMModel.cpp  math/Distribution.cpp math/GompertzModel.cpp  mpi/LCGrid.cpp  \
  pedestrian/Ellipse.cpp  pedestrian/PedDistributor.cpp  pedestrian/Pedestrian.cpp  \
  routing/AccessPoint.cpp  routing/DirectionStrategy.cpp  \
  routing/DummyRouter.cpp  routing/GlobalRouter.cpp  routing/GraphRouter.cpp  \
  routing/QuickestPathRouter.cpp  routing/SafestPathRouter.cpp  routing/Router.cpp  \
  routing/RoutingEngine.cpp  routing/NavMesh.cpp  routing/DTriangulation.cpp  \
  routing/MeshRouter.cpp  routing/mesh/Mesh.cpp  routing/graph/NavLineState.cpp  \
  routing/graph/RoutingGraph.cpp  routing/graph/RoutingGraphStorage.cpp  \
  routing/CognitiveMapRouter.cpp  routing/cognitive_map/CognitiveMap.cpp  \
  routing/cognitive_map/NavigationGraph.cpp  routing/cognitive_map/CognitiveMapStorage.cpp  \
  routing/cognitive_map/AbstractCognitiveMapCreator.cpp  routing/cognitive_map/CompleteCognitiveMapCreator.cpp  \
  routing/cognitive_map/EmptyCognitiveMapCreator.cpp  routing/cognitive_map/navigation_graph/GraphEdge.cpp  \
  routing/cognitive_map/navigation_graph/GraphVertex.cpp  routing/cognitive_map/sensor/RoomToFloorSensor.cpp  \
  routing/cognitive_map/sensor/SensorManager.cpp  routing/cognitive_map/sensor/AbstractSensor.cpp  \
  poly2tri/common/shapes.cpp  poly2tri/sweep/sweep_context.cpp  poly2tri/sweep/advancing_front.cpp  \
  poly2tri/sweep/sweep.cpp  poly2tri/sweep/cdt.cpp  events/EventManager.cpp  \
  math/GPU_GCFMModel.cpp \
  

#OBJECTS=$(SOURCES:.cpp=.o)
EXECUTABLE=jpscore_pgi.exe

all:
	$(MCC) $(LDFLAGS) $(LREALEASE) -o $(EXECUTABLE) $(SOURCES)

	
clean :
	rm -f $(EXECUTABLE) 
	rm -f $(OBJECTS)
	rm -f *.o
